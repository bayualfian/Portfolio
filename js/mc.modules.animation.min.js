var templateBaseURL = "http://portfolio.bayualfian.com";
var themeColor = "#56ba76";
var menuActive = true;
var menuHoverActive = true;
var menuTextOutColor = "#777777";
var customPageStart = true;
var customPageStartURL = "#portfolio.html";
var customPageStartSide = "none";
var customPageStartType = "full_width_gallery";
var phpUrlPath = "php/contact_synergy.php";
var contactFormDemo = true;
$(document).ready(function () {
    readyAndLoad++;
    $(window).error(function (c, b, a) {
        console.log("error: ", c, " url: ", b, " line: ", a)
    });
    if (readyAndLoad == 2) {
        checkIfTouchDevice()
    }
});
$(window).load(function () {
    readyAndLoad++;
    if (templateBaseURL == "http://localhost/" || templateBaseURL == "null") {
        $("body").empty().css("visibility", "visible").append("<br/><span>Please check the documentation - 2.1 General Settings - on how to change the 'templateBaseURL' path!!!</span>");
        return
    } else {
        var a = templateBaseURL + "";
        a = a.substr(a.length - 1);
        if (a != "/") {
            templateBaseURL = templateBaseURL + "/"
        }
    }
    if (readyAndLoad == 2) {
        checkIfTouchDevice()
    }
});
var readyAndLoad = 0;
var firstRun = true;
var isOverMenu = false;
var templateMenuW = 0;
var videojsHolder = "";
var audioAutoPlay = false;
var audioPlayerOpened = true;
var audioMuteOn = false;
var volumeValue = 0.8;
var t_scrBarV1 = "#module-scrollbar-holder";
var t_scrBarV2 = "#module-scrollbar-holder_v2";
var txt_modCont = "#module-container #module-container-holder";
var touchDevice = 0;

function checkIfTouchDevice() {
    touchDevice = !! ("ontouchstart" in window) ? 1 : 0;
    if (touchDevice == 1) {
        var a = document.getElementById("template-wrapper");
        a.addEventListener("touchmove", function (b) {
            if (currModuleType != "slideshow") {
                b.preventDefault()
            }
        }, false)
    }
    prepareTemplate()
}
function removeTemplateLoader() {
    $(".main-template-loader").remove();
    var a = $.browser.version + "";
    var b = document.documentMode;
    var c = a.indexOf(".");
    a = a.substring(0, c);
    if ($.browser.msie && (a < 8 || (a >= 8 && b < 8))) {
        $("body").empty().css("visibility", "visible");
        $("body").append("Your browser is too old for this website. Please upgrade your browser version or experience this website in: Firefox, Chrome, Opera or Safari");
        return
    }
    if (($.browser.msie && (a.substr(0, 1) > 8 && b > 8)) || !$.browser.msie) {
        if ($("#menu-container").hasClass("shadow-side-all") == false) {
            $("#menu-container").addClass("shadow-side-all")
        }
    }
    prepareTemplate()
}
var templateFirstRun = true;
var templateFirstRunDone = false;

function prepareTemplate() {
    if (templateFirstRun == true) {
        $("#template-logo").click(function (a) {
            if (loadedContent == false) {
                return
            }
            var c = $(this).attr("data-href");
            if (c == undefined) {
                c = ""
            }
            c = c.replace("#", "");
            c = c.substring(c.lastIndexOf("/") + 1);
            var b = (url.indexOf("#") != -1) ? url : "#" + url;
            if (b != c) {
                window.location.href = templateBaseURL + "#" + c
            }
        });
        storeMenuArr();
        menuListeners();
        checkWhatToLoad();
        templateFirstRun = false
    } else {
        settingsForScreens()
    }
}
function checkWhatToLoad() {
    var d = "";
    var b = "";
    currModuleType = $("#template-menu").attr("data-current-module-type");
    sideType = $("#template-menu").attr("data-side");
    b = $("#template-menu").attr("data-href").replace("#", "");
    prevURL = "#" + b;
    if (templateFirstRun == true) {
        var a = document.URL;
        a = a.replace(templateBaseURL, "");
        var c = "";
        if (a.indexOf("#") == -1 && a != "") {
            if (a == "index.html" || a == "index.htm") {
                a = "";
                if (a == "" && customPageStart == true) {
                    a = customPageStartURL;
                    a = a.replace(templateBaseURL, "")
                }
                a = a.replace("#", "");
                a = a.substring(a.lastIndexOf("/") + 1);
                c = updateMenu(a, prevURL, false, true);
                window.location.hash = c
            } else {
                a = a.replace("#", "");
                a = a.substring(a.lastIndexOf("/") + 1);
                c = updateMenu(a, prevURL, false, true);
                window.location.href = templateBaseURL + c
            }
        } else {
            if (a == "" && customPageStart == true) {
                a = customPageStartURL;
                a = a.replace(templateBaseURL, "");
                b = customPageStartURL.replace("#", "")
            } else {
                a = a.replace("#", "");
                a = a.substring(a.lastIndexOf("/") + 1);
                a = (a != "" && a != "#") ? a : b;
                b = a;
                if (a.indexOf("index.html") != -1 || a.indexOf("index.htm") != -1) {
                    a = a.substring(a.lastIndexOf("#") + 1)
                }
            }
            a = a.replace("#", "");
            a = a.substring(a.lastIndexOf("/") + 1);
            c = updateMenu(a, prevURL, false, true);
            window.location.hash = c
        }
    }
    d = oldMenuData[3];
    d = (d == undefined) ? "" : d;
    setMobileMenuOption(oldMenuData[2]);
    $("#module-container").empty();
    $("#module-container").load(d + b + " #module-container > *", firstRunLoaded)
}
function setMobileMenuOption(b) {
    var a = 0;
    b = b.replace("#", "");
    $("#template-smpartphone-menu select").find("option").each(function () {
        var c = $(this).attr("value").replace("#", "");
        if (c == b) {
            $(this).attr("selected", "selected")
        }
        a++
    })
}
function onTemplateHashChange(d, b) {
    var c = window.location.hash + "",
        f = menuOptionID,
        g = submenuOptionID,
        a = true,
        e = menuData;
    c = c.replace("#", "");
    c = c.substring(c.lastIndexOf("/") + 1);
    updateMenu(c, prevURL, undefined, true);
    oldMenuData = e;
    if (f != menuOptionID) {
        a = undefined
    }
    menuOptionOut(f, g, a);
    menuData = (menuOptionsArr[menuOptionID][1] != "null") ? menuOptionsArr[menuOptionID][1] : menuOptionsArr[menuOptionID][6][submenuOptionID][1];
    setMobileMenuOption(menuData[2]);
    touchContainer();
    urlChanged()
}
function updateMenu(h, l, b, c) {
    h = h.replace("#", "");
    l = l.replace("#", "");
    var a = "",
        g = 0,
        f = 0,
        n = 0,
        k = 0,
        m = menuOptionsArr.length;
    while (m--) {
        if (menuOptionsArr[m][1] != "null") {
            if (h == menuOptionsArr[m][1][2]) {
                a = "#" + menuOptionsArr[m][1][2];
                setMenuData(menuOptionsArr[m][1]);
                menuOptionID = m;
                submenuOptionID = -1;
                if (c == true) {
                    menuOptionIn(menuOptionID, submenuOptionID)
                }
                m = 0
            }
        } else {
            var e = menuOptionsArr[m][6];
            var d = e.length;
            while (d--) {
                if (h == e[d][1][2]) {
                    a = e[d][0];
                    setMenuData(e[d][1]);
                    menuOptionID = m;
                    submenuOptionID = d;
                    if (c == true) {
                        menuOptionIn(menuOptionID, submenuOptionID)
                    }
                    m = 0
                }
            }
        }
    }
    return a
}
function firstRunLoaded(b, a, c) {
    $(window).bind("hashchange", onTemplateHashChange);
    switch (a) {
    case "error":
        console.log("Error loading the INDEX page: " + b);
        break;
    case "success":
        setupAudio();
        TweenMax.to($(".main-template-loader"), 0.3, {
            css: {
                opacity: "0"
            },
            ease: Sine.easeOut,
            onComplete: removeTemplateLoader
        });
        break
    }
}
function getMenuWidth() {
    return $("#menu-container").width()
}
function getMenuHeight() {
    return $("#menu-container").height()
}
function settingsForScreens() {
    $("body").css("visibility", "visible");
    var e = parseInt($("#menu-container .menu-content-holder").css("width"), 10);
    var f = parseInt($("#menu-container #menu-hider").width(), 10);
    var b = parseInt($("#menu-container #menu-hider #menu-hider-icon").width(), 10);
    var g = parseInt($("#menu-container").css("height"), 10);
    var a = parseInt($("#menu-container #menu-hider").height(), 10);
    var d = parseInt($("#menu-container #menu-hider #menu-hider-icon").height(), 10);
    templateMenuW = e + f;
    $("#menu-hider-icon").click(menuHideClick);
    $("#module-container").css("width", ($(window).width() - templateMenuW) + "px");
    if ($(window).width() > 767) {
        $("#menu-container").css("left", -(e + f + b) + "px");
        $("#menu-container").css("visibility", "visible");
        $("#menu-hider").css("display", "inline");
        $("#menu-hider").css("visibility", "visible");
        $("#module-container").css("opacity", 1);
        $("#module-container").css("left", e + f + "px");
        $("footer").css("display", "inline");
        TweenMax.to($("#menu-container"), 0.4, {
            css: {
                left: "0px"
            },
            ease: Sine.easeInOut,
            delay: 0.5,
            onComplete: endStartupAnimation
        })
    }
    if ($(window).width() <= 767) {
        templateMenuW = 0;
        var c = $(window).height() - (g + a);
        $("#menu-container").css("left", "0px");
        $("#menu-container").css("top", -(g + a + d) + "px");
        $("#menu-container").css("visibility", "visible");
        $("#menu-hider").css("display", "inline");
        $("#menu-hider").css("visibility", "visible");
        $("#module-container").css("opacity", "1");
        $("#module-container").css("left", "0px");
        $("#module-container").css("top", (g + a) + "px");
        $("#module-container").css("height", c);
        TweenMax.to($("#menu-container"), 0.4, {
            css: {
                top: "0px"
            },
            ease: Sine.easeInOut,
            delay: 0.5,
            onComplete: endStartupAnimation
        })
    }
    $("#template-smpartphone-menu select").change(function () {
        if ($(this).val() != "#") {
            var h = updateMenu($(this).val(), prevURL, undefined, false);
            window.location.hash = h
        }
    })
}
var delayInterval = "";

function endStartupAnimation() {
    templateFirstRunDone = true;
    delayInterval = setInterval(function () {
        showModule();
        clearInterval(delayInterval)
    }, 200)
}
function endModuleStart() {}
function menuHideClick() {
    var b = $(window).width(),
        e = $(window).height();
    if (menuActive == true) {
        menuActive = false;
        alwaysUpdate();
        if (b >= 768) {
            var f = ($("#menu-hider").length > 0) ? parseInt($("#menu-hider").width(), 10) : 0,
                d = parseInt($("#menu-container").css("width"), 10) - f,
                c = 0;
            TweenMax.to($("#template-wrapper"), 0.4, {
                css: {
                    left: -(d) + "px"
                },
                ease: Sine.easeInOut
            });
            TweenMax.to($("#menu-container"), 0.4, {
                css: {
                    left: c + "px"
                },
                ease: Sine.easeInOut,
                onComplete: function () {
                    if (touchDevice == 0) {
                        activateHoverMenu()
                    }
                }
            })
        } else {
            var a = parseInt($("#menu-container #menu-hider").height(), 10),
                g = parseInt($("#menu-container").css("height"), 10) - a,
                c = 0;
            TweenMax.to($("#template-wrapper"), 0.4, {
                css: {
                    top: -(g) + "px"
                },
                ease: Sine.easeInOut
            });
            TweenMax.to($("#menu-container"), 0.4, {
                css: {
                    top: c + "px"
                },
                ease: Sine.easeInOut,
                onComplete: function () {
                    if (touchDevice == 0) {
                        activateHoverMenu()
                    }
                }
            })
        }
    } else {
        if (touchDevice == 0) {
            disableHoverMenu()
        }
        menuActive = true;
        isOverMenu = false;
        alwaysUpdate();
        TweenMax.to($("#template-wrapper"), 0.4, {
            css: {
                left: "0px",
                top: "0px"
            },
            ease: Sine.easeInOut
        });
        TweenMax.to($("#menu-container"), 0.4, {
            css: {
                left: "0px"
            },
            top: "0px",
            ease: Sine.easeInOut
        })
    }
}
function activateHoverMenu() {
    $("#menu-container").bind("mouseenter", overMenu);
    $("#menu-hider-icon").bind("mouseenter", menuHiderOver);
    $("#menu-hider-icon").bind("mouseleave", menuHiderOver);
    $("#menu-container").bind("mouseleave", outMenu)
}
function menuHiderOver(a) {
    a.stopPropagation()
}
function disableHoverMenu() {
    $("#menu-container").unbind("mouseenter", overMenu);
    $("#menu-hider-icon").unbind("mouseenter", menuHiderOver);
    $("#menu-hider-icon").unbind("mouseleave", menuHiderOver);
    $("#menu-container").unbind("mouseleave", outMenu)
}
function overMenu() {
    if (menuActive == true) {
        return
    }
    isOverMenu = true;
    TweenMax.to($("#template-wrapper"), 0.4, {
        css: {
            left: "0px",
            top: "0px"
        },
        ease: Sine.easeInOut
    });
    TweenMax.to($("#menu-container"), 0.4, {
        css: {
            left: "0px",
            top: "0px"
        },
        ease: Sine.easeInOut
    });
    alwaysUpdate()
}
function outMenu() {
    if (menuActive == true) {
        return
    }
    isOverMenu = false;
    var b = $(window).width(),
        e = $(window).height();
    if (b >= 768) {
        var d = parseInt($("#menu-container").css("width"), 10) - parseInt($("#menu-hider").width(), 10),
            c = 0;
        TweenMax.to($("#template-wrapper"), 0.4, {
            css: {
                left: -(d) + "px",
                top: "0px"
            },
            ease: Sine.easeInOut
        });
        TweenMax.to($("#menu-container"), 0.4, {
            css: {
                left: c + "px",
                top: "0px"
            },
            ease: Sine.easeInOut
        })
    } else {
        var a = parseInt($("#menu-container #menu-hider").height(), 10),
            f = parseInt($("#menu-container").css("height"), 10) - a,
            c = 0;
        TweenMax.to($("#template-wrapper"), 0.4, {
            css: {
                top: -(f) + "px",
                left: "0px"
            },
            ease: Sine.easeInOut
        });
        TweenMax.to($("#menu-container"), 0.4, {
            css: {
                top: c + "px",
                left: "0px"
            },
            ease: Sine.easeInOut,
            onComplete: function () {
                if (touchDevice == 0) {
                    activateHoverMenu()
                }
            }
        })
    }
    alwaysUpdate()
}
function alwaysUpdate() {
    if (currentSlide != null) {
        resizeImage(currentSlide, true)
    }
    if ($showModuleBackground != null) {
        resizeImage($showModuleBackground, true)
    }
    var m = $(window).width();
    var i = $(window).height();
    var f = m - get_OffsetWidth();
    var q = i;
    var l = $("#template-menu").attr("data-current-module-type");
    if (m < 768) {
        var a = parseInt($("#menu-container #menu-hider").height(), 10),
            c = i - a;
        q = c;
        if (touchDevice == 1) {
            updateTemplateScrollbar()
        }
    }
    TweenMax.to($("#module-container"), 0.4, {
        css: {
            width: f + "px",
            height: q + "px"
        },
        ease: Sine.easeInOut
    });
    if ($("#module-container-old") != null && $("#module-container-old").length > 0) {
        if ($("#module-container-old #module-background-holder").length > 0) {
            resizeImage($("#module-container-old #module-background-holder"), true)
        }
        if ($("#module-container-old #slide-current").length > 0) {
            resizeImage($("#module-container-old #slide-current"), true)
        }
    }
    var h = $("#slideshow-thumbs");
    if (h.length > 0) {
        var b = (f - h.width()) * 0.5;
        TweenMax.to(h, 0.4, {
            css: {
                marginLeft: b
            },
            easing: Sine.easeOut
        })
    }
    var j = $("#slideshow .slideshow-slide", $("#module-container"));
    if (j.length > 0) {
        $("#slideshow-captions", j).each(function () {
            $(this).css("top", (q * 0.3) + "px");
            TweenMax.to($(this), 0.4, {
                css: {
                    width: (f * 0.5) + "px"
                },
                ease: Sine.easeInOut
            })
        })
    }
    var p = $(txt_modCont);
    var o = p.attr("data-id");
    if (o == "module-position-bc" || o == "module-position-cc") {
        if (p.length > 0) {
            var n = Math.round((f - $(":first", p).width()) * 0.5);
            TweenMax.to(p, 0.4, {
                css: {
                    left: n
                },
                easing: Sine.easeOut
            })
        }
        if ($("#module-galleries").length > 0) {
            moduleUpdate_gallery()
        }
    }
    var e = $("#module-full-width-gallery");
    if (e.length > 0) {
        if (initialThumbW <= 0) {
            return
        }
        moduleUpdate_full_width_gallery()
    }
    var k = $("#module-contact #module-contact-holder");
    if (k.length > 0) {
        moduleUpdate_contact();
        TweenMax.to(k, 0.4, {
            css: {
                left: (f - k.width()) * 0.5
            },
            easing: Sine.easeOut
        })
    }
    var d = $("#module-full-width");
    if (d.length > 0) {
        moduleUpdate_full_width(true)
    }
    var g = $("#module-fullscreen-video");
    if (g.length > 0) {
        moduleUpdate_fullscreen_video(true)
    }
    if (l == "text_page") {
        moduleUpdate_text_page()
    }
}
var $showModuleBackground = null;
var $showModuleBackgroundSolid = null;
var showDone = false;
var startDelay = "";

function showModule() {
    if (templateFirstRunDone == false) {
        return
    }
    if (moduleList != null) {
        moduleList.destroy();
        moduleList = null
    }
    if ($("#template-menu").attr("data-current-module-type") == "slideshow") {
        if (firstMediaLoaded == false) {
            return
        }
        firstMediaLoaded = false;
        TweenMax.to($("#loading-animation"), 0.3, {
            css: {
                right: "-104px"
            },
            delay: 0.3,
            ease: Circ.easeOut
        });
        if (isOtherURL == true) {
            urlChanged()
        } else {
            clearCustomInterval(startDelay);
            startDelay = setInterval(function () {
                loadedContent = true;
                moduleSlideshow();
                clearCustomInterval(startDelay)
            }, 300)
        }
    } else {
        $showModuleBackground = $("#module-container #module-background-holder #module-background");
        $showModuleBackgroundSolid = $("#module-container #module-background-holder div");
        showDone = true;
        if ($showModuleBackground != null && $showModuleBackground.length > 0) {
            if (backLoaded == true) {
                showDone = true;
                animateModuleBackground()
            }
        } else {
            if ($showModuleBackgroundSolid != null && $showModuleBackgroundSolid.length > 0) {
                backLoaded = true;
                if (backLoaded == true) {
                    showDone = true;
                    $showModuleBackground = null;
                    $showModuleBackgroundSolid.css("display", "inline").css("opacity", "0").css("visibility", "visible");
                    TweenMax.to($showModuleBackgroundSolid, 0.4, {
                        css: {
                            opacity: "1"
                        },
                        delay: 0.4,
                        ease: Sine.easeOut,
                        onComplete: function () {
                            if (isOtherURL == true) {
                                urlChanged()
                            } else {
                                startModule()
                            }
                        }
                    });
                    audioPlayerPlay();
                    TweenMax.to($("#loading-animation"), 0.3, {
                        css: {
                            right: "-104px"
                        },
                        ease: Circ.easeOut
                    })
                }
            } else {
                $showModuleBackground = null;
                backLoaded = false;
                if (isOtherURL == true) {
                    urlChanged()
                } else {
                    audioPlayerPlay();
                    TweenMax.to($("#loading-animation"), 0.3, {
                        css: {
                            right: "-104px"
                        },
                        delay: 0.3,
                        ease: Circ.easeOut,
                        onComplete: startModule
                    })
                }
            }
        }
    }
}
var backLoaded = false;

function animateModuleBackground() {
    backLoaded = true;
    if (showDone == true) {
        showDone = false;
        backLoaded = false;
        audioPlayerPlay();
        TweenMax.to($("#loading-animation"), 0.3, {
            css: {
                right: "-104px"
            },
            delay: 0.3,
            ease: Circ.easeOut,
            onComplete: function () {
                if (isOtherURL == true) {
                    urlChanged()
                } else {
                    hideAnimationCompleted()
                }
            }
        })
    }
}
function hideAnimationCompleted() {
    $showModuleBackground = $("#module-container #module-background");
    if ($showModuleBackground.length > 0) {
        resizeImage($showModuleBackground);
        $showModuleBackground.css("display", "inline").css("opacity", "0").css("visibility", "visible").css("left", (-60) + "px");
        TweenMax.to($showModuleBackground, 0.6, {
            css: {
                opacity: "1",
                left: "0px"
            },
            ease: Circ.easeOut,
            onComplete: function () {
                if (isOtherURL == true) {
                    urlChanged()
                } else {
                    startModule()
                }
            }
        })
    }
}
var endModuleFunction = null;
var endPreviousModule = false;
var previousModuleType = "";

function startModule() {
    loadedContent = true;
    var a = $("#template-menu").attr("data-current-module-type");
    if (menuData[2] != oldMenuData[2] && menuData[2] != undefined) {
        clearCustomInterval(showModuleInterval);
        urlChanged();
        return
    }
    previousModuleType = a;
    endShowPage();
    templateCollectGarbage();
    switch (a) {
    case "slideshow":
        moduleSlideshow();
        break;
    case "home2":
        moduleHome2();
        break;
    case "home3":
        moduleHome3();
        break;
    case "banner":
        moduleBanner();
        break;
    case "text_page":
        moduleTextPage();
        break;
    case "news":
        moduleNews();
        break;
    case "contact":
        moduleContact();
        break;
    case "showreel":
        moduleShowreel();
        break;
    case "gallery":
        moduleGallery();
        break;
    case "full_width":
        moduleFullWidth();
        break;
    case "full_width_gallery":
        moduleFullWidthGallery();
        break;
    case "page_columns":
        modulePageColumns();
        break;
    case "fullscreen_video":
        moduleFullscreenVideo();
        break;
    case "pricing_tables":
        modulePricingTables();
        break
    }
}
var endShowDelay = "";

function endShowPage() {
    if (firstRun == true) {
        firstRun = false
    }
    if ($("#module-container-old").length > 0) {
        $("body").find("#module-container-old").each(function () {
            $(this).empty().remove()
        })
    }
    endShowDelay = setInterval(function () {
        checkBackgroundRotation();
        clearCustomInterval(endShowDelay)
    }, 50)
}
var backgArrSrc = [];
var backgArr = [];
var currBack = "";
var prevBack = "";
var backDelay = "";
var backCount = 0;
var backTime = 3;

function checkBackgroundRotation() {
    backgArrSrc = [];
    backgArr = [];
    var d = $("#module-container #module-background-holder");
    if (d.length > 0 && d.children().length > 1) {
        var c = d.attr("data-time");
        if (c != undefined && c != "") {
            backTime = Number(c)
        }
        var b = 0;
        backCount = 0;
        d.children().each(function () {
            if (b == 0) {
                if ($(this).is("img") == true) {
                    backgArrSrc[b] = $(this).attr("src")
                }
            } else {
                if ($(this).attr("data-src") != undefined) {
                    backgArrSrc[b] = $(this).attr("data-src")
                }
                $(this).remove()
            }
            backgArr[b] = $(this);
            b++
        });
        b = 0;
        var a = backgArrSrc.length;
        for (b = 1; b < a; b++) {
            var e = '<img src="' + backgArrSrc[b] + '" class="module-background" alt="" title="" id="next-backg"/>';
            d.append(e);
            backgArr[b] = $("#next-backg", d);
            backgArr[b].attr("id", "").css("opacity", "0")
        }
        startOn = true;
        startAnimBack()
    }
}
var startOn = false;

function startAnimBack() {
    if (startOn == false || backgArr.length <= 1) {
        startOn = false;
        return
    }
    backDelay = setInterval(function () {
        if (backCount < backgArr.length - 1) {
            backCount++
        } else {
            backCount = 0
        }
        animateBackground(backCount);
        stopAnimBack()
    }, backTime * 1000)
}
function stopAnimBack(a) {
    if (backDelay != "") {
        clearInterval(backDelay);
        backDelay = ""
    }
    if (a != undefined) {
        startOn = a
    }
}
function animateBackground(b) {
    if (backgArr[b] == undefined) {
        return;
        stopAnimBack(true)
    }
    var a = $("#module-container #module-background-holder #module-background");
    if (a.length > 0) {
        a.css("z-index", "1").attr("id", "")
    }
    var c = backgArr[b];
    c.css("z-index", "");
    c.attr("id", "module-background");
    $showModuleBackground = c;
    resizeImage(c);
    c.css("visibility", "visible").css("display", "inline");
    TweenMax.to(c, 0.8, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut,
        onComplete: function () {
            a.css("opacity", "0").css("visibility", "hidden");
            startAnimBack()
        }
    })
}
var slideshowLimit = 0;
var slideshowCurrID = 0;
var slideshowPrevID = 0;
var oldSlide = "";
var slidesArray = new Array();
var thumbsArray = [];
var thumbsList = null;
var currentSlide = null;
var slideshowAutoPlay = true;
var total = 0;
var timerSec = 5;
var timerSlideshow = null;
var firstMediaLoaded = false;

function moduleSlideshow() {
    slideshowCurrID = 0;
    slideshowPrevID = 0;
    var a = $("#module-container");
    currentSlide = $("#slide-current", a);
    currentSlide.attr("style", "display:list-item; visibility: visible; left:" + (-60) + "px;");
    resizeImage(currentSlide);
    currentSlide.css("opacity", "0");
    storeAllSlides();
    $("#module-container").css("visibility", "visible");
    TweenMax.to(currentSlide, 0.6, {
        css: {
            opacity: "1",
            left: "0px"
        },
        ease: Circ.easeOut,
        onComplete: slideshowShowThumbs
    })
}
function onFirstMediaLoaded() {
    firstMediaLoaded = true;
    showModule();
    $("#slide-current").attr("onload", "")
}
function storeAllSlides() {
    var a = $("#module-container");
    var c = $("#slideshow", a);
    var b = 0;
    slideshowAutoPlay = (c.attr("data-auto-play") == "true") ? true : false;
    timerSec = (c.attr("data-time") != "undefined") ? Number(c.attr("data-time")) : 4;
    c.children().each(function () {
        slidesArray[b] = new Array();
        if (b != 0) {
            var f = $("#slide-src", this);
            var g = '<img src="' + f.attr("data-src") + '" alt="" />';
            f.after(g).remove()
        }
        slidesArray[b][0] = $("img", this);
        var d = new Array();
        var h = new Array();
        var e = 0;
        $("#slideshow-captions", this).css("top", ($(window).height() * 0.3) + "px");
        $("#slideshow-captions", this).css("left", ($("#module-container").width() * 0.5) + "px");
        $("#slideshow-captions", this).children().each(function () {
            d[e] = $(this);
            h[e] = $(this).width();
            e++
        });
        slidesArray[b][1] = d;
        slidesArray[b][2] = h;
        b++
    });
    slideshowLimit = b++;
    if (slidesArray[0][1].length != 0) {
        captionAvailable = true
    }
    b = 0;
    $("#slideshow-thumbs #slideshow-thumbs-holder #slideshow-thumbs-container", a).children().each(function () {
        if (b == 0) {
            if ($(this).hasClass("thumb-selected") == false) {
                $(this).addClass("thumb-selected");
                $("#thumb-image-hover", $(this)).removeClass().attr("style", "left: 0px; top: 0px;");
                $("img", $(this)).attr("style", "border-color:" + themeColor + ";")
            }
        }
        thumbsArray[b] = $(this);
        b++
    })
}
function startTimer() {
    if (timerSlideshow == null) {
        timerSlideshow = $.timer(checkSlideshowTimer);
        timerSlideshow.set({
            time: timerSec * 1000,
            autostart: false
        })
    }
}
function checkSlideshowTimer() {
    timerSlideshow.stop();
    if (slideshowCurrID < slideshowLimit - 1) {
        slideshowPrevID = slideshowCurrID;
        slideshowCurrID++
    } else {
        slideshowPrevID = slideshowCurrID;
        slideshowCurrID = 0
    }
    var a = document.getElementById("slideshow-thumbs-counter").getElementsByTagName("span");
    $(a).empty().append((slideshowCurrID + 1) + "/" + total);
    stopOrHidePrevCaptions()
}
function stopSlideshowTimer() {
    timerSlideshow.stop()
}
function deleteSlideshowTimer() {
    if (timerSlideshow != null) {
        timerSlideshow.stop();
        timerSlideshow = null
    }
}
function slideshowShowThumbs() {
    endShowPage();
    if (thumbsList != null) {
        thumbsList.destroy();
        thumbsList = null
    }
    if (touchDevice == 0) {
        thumbsList = $("#slideshow-thumbs-content").McCustomList({
            scrollDirection: "horizontal",
            scrollType: "linear"
        });
        thumbsList.setupList({
            scrollContainer: $("#slideshow-thumbs-container"),
            mouseWheelSupport: "yes",
            buttonsSupport: "no",
            draggerContainer: null,
            draggerScroll: null,
            totalMinusSize: 0,
            scrollSpeed: 112,
            offsetSize: -4,
            horizFixHolder: $(".horizontal-fix-slideshow-thumbs")
        });
        $("#slideshow-thumbs-container").find(".slideshow-thumb-holder").hover(function (k) {
            if ($(this).hasClass("thumb-selected") == false) {
                customHoverAnimation("over", k, $(this), $("#thumb-image-hover", this));
                TweenMax.to($("img", this), 0.6, {
                    css: {
                        borderColor: themeColor
                    },
                    ease: Circ.easeOut
                })
            }
        }, function (l) {
            var k = "#ffffff";
            if ($(this).hasClass("thumb-selected") == false) {
                customHoverAnimation("out", l, $(this), $("#thumb-image-hover", this));
                TweenMax.to($("img", this), 0.6, {
                    css: {
                        borderColor: k
                    },
                    ease: Circ.easeOut
                })
            }
        });
        var h = $(".slideshow-thumbs-arrow-backward .slideshow-thumbs-arrow-backg");
        var f = h.css("opacity");
        var j = rgb2hex(h.css("background-color"));
        var i = $(".slideshow-thumbs-arrow-backward, .slideshow-thumbs-arrow-forward");
        var b = $("#slideshow-thumbs-holder .slideshow-thumbs-arrow-backward");
        var e = $("#slideshow-thumbs-holder .slideshow-thumbs-arrow-forward");
        i.unbind("mouseenter mouseleave");
        i.hover(function () {
            TweenMax.to($(".slideshow-thumbs-arrow-backg", this), 0.3, {
                css: {
                    opacity: "1",
                    backgroundColor: themeColor
                },
                easing: Sine.easeOut
            })
        }, function () {
            TweenMax.to($(".slideshow-thumbs-arrow-backg", this), 0.3, {
                css: {
                    opacity: f,
                    backgroundColor: j
                },
                easing: Sine.easeOut
            })
        });
        b.unbind("click");
        e.unbind("click");
        e.click(function () {
            if (thumbsList != null) {
                thumbsList.listAutoScroll(-1)
            }
        });
        b.click(function () {
            if (thumbsList != null) {
                thumbsList.listAutoScroll(1)
            }
        })
    } else {
        if (touchDevice == 1) {
            var b = $("#slideshow-thumbs-holder .slideshow-thumbs-arrow-backward");
            var e = $("#slideshow-thumbs-holder .slideshow-thumbs-arrow-forward");
            b.css("display", "none");
            e.css("display", "none")
        }
    }
    total = slidesArray.length;
    var c = document.getElementById("slideshow-thumbs-counter").getElementsByTagName("span");
    $(c).empty().append((slideshowCurrID + 1) + "/" + total);
    var g = $("#slideshow-thumbs-container .slideshow-thumb-holder");
    g.click(function () {
        var k = g.index(this);
        if (slideshowCurrID == k) {
            return
        }
        slideshowPrevID = slideshowCurrID;
        slideshowCurrID = k;
        if (timerSlideshow != null) {
            timerSlideshow.stop()
        }
        $(c).empty().append((k + 1) + "/" + total);
        changeThumbsSelection(slideshowPrevID, slideshowCurrID);
        stopOrHidePrevCaptions()
    });
    var d = $("#slideshow-thumbs");
    var a = -Math.abs(d.width() - get_OffsetWidth()) / 2;
    d.attr("style", "margin-left:" + a + "px; bottom: -84px; visibility: visible;");
    if (touchDevice == 1) {
        $(".horizontal-fix-slideshow-thumbs").css("width", 999999);
        $("#slideshow-thumbs-container").css("width", $("#slideshow-thumbs-container").width());
        $(".horizontal-fix-slideshow-thumbs").css("width", "");
        $("#slideshow-thumbs-content").css("overflow", "auto");
        $("#slideshow-thumbs-content").css("-webkit-overflow-scrolling", "touch")
    }
    startTimer();
    initialThumbContW = $("#slideshow-thumbs-content").width();
    moduleUpdate_slideshow();
    TweenMax.to(d, 0.6, {
        css: {
            bottom: "4px"
        },
        delay: 0.6,
        ease: Circ.easeOut,
        onComplete: checkCaption
    })
}
var initialThumbContW = 0;

function changeThumbsSelection(c, a) {
    oldThumb = thumbsArray[c];
    var b = "#ffffff";
    if (oldThumb.length > 0) {
        oldThumb.removeClass("thumb-selected");
        TweenMax.to($("#thumb-image-hover", oldThumb), 0.3, {
            css: {
                left: "-100%",
                top: "0%"
            },
            ease: Sine.easeInOut
        });
        TweenMax.to($("img", oldThumb), 0.6, {
            css: {
                borderColor: b
            },
            ease: Circ.easeOut
        })
    }
    currentThumb = thumbsArray[a];
    if (currentThumb.hasClass("thumb-selected") == false) {
        currentThumb.addClass("thumb-selected");
        TweenMax.to($("#thumb-image-hover", currentThumb), 0.3, {
            css: {
                left: "0",
                top: "0%"
            },
            ease: Sine.easeInOut
        });
        TweenMax.to($("img", currentThumb), 0.6, {
            css: {
                borderColor: themeColor
            },
            ease: Circ.easeOut
        })
    }
}
function changeSlideshowSlides(b, c) {
    if (slidesArray[b][0].attr("id") == "slide-current") {
        slidesArray[b][0].removeAttr("id");
        oldSlide = slidesArray[b][0];
        oldSlide.css("style", "z-index: 1;");
        var a = oldSlide.parent(oldSlide);
        a.css("position", "absolute").css("z-index", "1")
    }
    slidesArray[c][0].attr("id", "slide-current");
    currentSlide = slidesArray[c][0];
    if (currentSlide.css("style") != undefined) {
        currentSlide.removeAttr("style")
    }
    currentSlide.attr("style", "z-index: 2; display:list-item; left: 0px; visibility: visible;");
    resizeImage(currentSlide);
    currentSlide.css("opacity", "0");
    var d = currentSlide.parent(currentSlide);
    d.css("position", "absolute").css("z-index", "2").css("top", "0px");
    TweenMax.to(currentSlide, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Sine.easeOut,
        onComplete: completeSlideTransition
    })
}
function completeSlideTransition() {
    var a = 0;
    var b = slidesArray.length;
    for (a = 0; a < b; a++) {
        if (a != slideshowPrevID && a != slideshowCurrID) {
            slidesArray[a][0].attr("style", "display:none; opacity: 0; visibility: hidden;")
        }
    }
    if (oldSlide != "") {
        oldSlide.attr("style", "display:none; opacity: 0; visibility: hidden;")
    }
    checkCaption()
}
var showingInProgress = 0;

function checkCaption() {
    if (showingInProgress == 1) {
        return
    }
    if (slideshowAutoPlay == true && timerSlideshow != null) {
        timerSlideshow.play(true)
    }
    if (slidesArray[slideshowCurrID][1].length != 0) {
        showingInProgress = 1;
        var f = 0;
        var h = slidesArray[slideshowCurrID][1].length;
        var g = $(window).height();
        var a = $(window).width();
        for (f = 0; f < h; f++) {
            var e = slidesArray[slideshowCurrID][1][f];
            e.css("width", "");
            var c = slidesArray[slideshowCurrID][2][f] + 10;
            var b = f * 45;
            var d = (f == h - 1) ? a * 0.5 : -(c + a * 0.5);
            var j = "top:" + b + "px; left:" + d + "px; display:inline-block; opacity:1;";
            e.attr("style", j);
            if (f == h - 1) {
                TweenMax.to(e, 5, {
                    css: {
                        left: -(c + a * 0.5) + "px"
                    },
                    ease: SlowMo.ease.config(0.7, 0.96),
                    onComplete: resetShowing
                })
            } else {
                TweenMax.to(e, 5, {
                    css: {
                        left: a * 0.5 + "px"
                    },
                    ease: SlowMo.ease.config(0.7, 0.96)
                })
            }
        }
    }
}
function resetShowing() {
    showingInProgress = 0;
    if (slidesArray[slideshowCurrID][1].length != 0) {
        var a = 0;
        var b = slidesArray[slideshowCurrID][1].length;
        for (a = 0; a < b; a++) {
            slidesArray[slideshowCurrID][1][a].css("opacity", "0")
        }
    }
}
function stopOrHidePrevCaptions() {
    var a = $("#slideshow .slideshow-slide");
    if (a.length > 0) {
        $("#slideshow-captions", a).each(function () {
            $(this).css("top", ($(window).height() * 0.3) + "px");
            $(this).css("left", ($("#module-container").width() * 0.5) + "px")
        })
    }
    if (slidesArray[slideshowPrevID][1].length != 0) {
        showingInProgress = 0;
        var d = 0;
        var g = slidesArray[slideshowPrevID][2].length;
        var f = $(window).height();
        var c = $(window).width();
        for (d = 0; d < g; d++) {
            var e = slidesArray[slideshowPrevID][2][d];
            var b = f * 0.3 + d * 45;
            var h = slidesArray[slideshowPrevID][1][d];
            if (d == g - 1) {
                TweenMax.to(h, 0.2, {
                    css: {
                        left: -(e + c * 0.5) + "px",
                        opacity: "0"
                    },
                    ease: Sine.easeOut,
                    onComplete: runOtherSlide
                })
            } else {
                TweenMax.to(h, 0.2, {
                    css: {
                        left: c * 0.5 + "px",
                        opacity: "0"
                    },
                    ease: Sine.easeOut
                })
            }
        }
    } else {
        runOtherSlide()
    }
}
function runOtherSlide() {
    changeThumbsSelection(slideshowPrevID, slideshowCurrID);
    changeSlideshowSlides(slideshowPrevID, slideshowCurrID)
}
var stdCurrIndex = 0;
var stdPrevIndex = 0;
var totalBannerSlides = 0;
var slideBannerAutoPlay = false;
var slideBannerSec = 4;
var timerBanner = null;
var delayBannerInterval = "";
var timerGraphic = "";

function moduleHome2() {
    var m = $(txt_modCont);
    var o = $("#module-home-layout2", m);
    if (o.length <= 0) {
        return
    }
    var a = $("#home-layout2-banner", o);
    if (a.length > 0) {
        slideBannerAutoPlay = (a.attr("data-auto-play") == "true") ? true : false;
        slideBannerSec = (a.attr("data-time") != "undefined") ? Number(a.attr("data-time")) : 4
    }
    timerGraphic = "";
    if ($(".banner-timer-graphic", a).length > 0) {
        timerGraphic = $(".banner-timer-graphic", a)
    }
    moduleUpdate_home2();
    var e = parseInt(m.css("left"), 10);
    m.attr("style", "left: 100%; visibility: visible;");
    TweenMax.to(m, 0.6, {
        css: {
            left: e
        },
        ease: Circ.easeOut
    });
    var p = [];
    var f = $("#standard-banner-controls");
    var c = $("#control-pin", f);
    var b = [];
    var k = 0;
    f.css("margin-left", -(f.width() * 0.5));
    $("#standard-banner").find("a").each(function () {
        var i = $("#dataSrc", this);
        if (i.length > 0) {
            var s = '<img src="' + i.attr("data-src") + '" />';
            i.after(s).remove()
        }
        p[k] = $(this);
        k++
    });
    totalBannerSlides = p.length;
    k = 0;
    f.find("#control-pin").each(function () {
        b[k] = $(this);
        k++
    });
    c.hover(function () {
        if ($(this).hasClass("selected") == false) {
            TweenMax.to($(".control-pin-hover", this), 0.3, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            })
        }
    }, function () {
        if ($(this).hasClass("selected") == false) {
            TweenMax.to($(".control-pin-hover", this), 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            })
        }
    });
    c.click(function () {
        stdPrevIndex = stdCurrIndex;
        stdCurrIndex = $(c).index(this);
        if (stdCurrIndex == stdPrevIndex) {
            return
        }
        if (timerBanner != null) {
            r()
        }
        b[stdPrevIndex].removeClass("selected");
        b[stdCurrIndex].addClass("selected");
        TweenMax.to($(".control-pin-hover", b[stdPrevIndex]), 0.3, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        TweenMax.to($(".control-pin-hover", b[stdCurrIndex]), 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        d()
    });

    function d() {
        p[stdCurrIndex].attr("class", "selected opacity_0");
        TweenMax.to(p[stdPrevIndex], 0.6, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut,
            onComplete: function () {
                h()
            }
        });
        TweenMax.to(p[stdCurrIndex], 0.6, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        })
    }
    function h() {
        var u = 0;
        var s = p.length;
        for (u = 0; u < s; u++) {
            if (u != stdCurrIndex) {
                p[u].attr("class", "")
            }
        }
        if (slideBannerAutoPlay == true && timerBanner != null) {
            timerBanner.play(true);
            if (timerGraphic.length > 0) {
                TweenMax.to(timerGraphic, slideBannerSec, {
                    css: {
                        width: "100%"
                    },
                    easing: Sine.easeOut
                })
            }
        }
    }
    if (slideBannerAutoPlay == true) {
        clearInterval(delayBannerInterval);
        delayBannerInterval = "";
        delayBannerInterval = setInterval(function () {
            j();
            timerBanner.play(true);
            if (timerGraphic.length > 0) {
                TweenMax.to(timerGraphic, slideBannerSec, {
                    css: {
                        width: "100%"
                    },
                    easing: Sine.easeOut
                })
            }
            clearInterval(delayBannerInterval)
        }, 500)
    }
    function j() {
        if (timerBanner == null) {
            timerBanner = $.timer(g);
            timerBanner.set({
                time: slideBannerSec * 1000,
                autostart: false
            })
        }
    }
    function g() {
        timerBanner.stop();
        if (timerGraphic.length > 0) {
            TweenMax.to(timerGraphic, 0.2, {
                css: {
                    width: "0%"
                },
                easing: Sine.easeOut
            })
        }
        if (stdCurrIndex < totalBannerSlides - 1) {
            stdPrevIndex = stdCurrIndex;
            stdCurrIndex++
        } else {
            stdPrevIndex = stdCurrIndex;
            stdCurrIndex = 0
        }
        b[stdPrevIndex].removeClass("selected");
        b[stdCurrIndex].addClass("selected");
        TweenMax.to($(".control-pin-hover", b[stdPrevIndex]), 0.3, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        TweenMax.to($(".control-pin-hover", b[stdCurrIndex]), 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        d()
    }
    function r() {
        timerBanner.stop();
        if (timerGraphic.length > 0) {
            TweenMax.to(timerGraphic, 0.2, {
                css: {
                    width: "0%"
                },
                easing: Sine.easeOut
            })
        }
    }
    var q = $(".home-layout-clients a");
    if (q.length > 0) {
        q.hover(function () {
            TweenMax.to($(".client-over", this), 0.6, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            })
        }, function () {
            TweenMax.to($(".client-over", this), 0.6, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            })
        })
    }
    var n = $(".home-layout2-content ul li");
    var l = rgb2hex($(".layout2-description p", n).css("color"));
    if (touchDevice == 0) {
        if (n.length > 0) {
            n.hover(function () {
                TweenMax.to($(".layout2-description p", this), 0.6, {
                    css: {
                        color: themeColor
                    },
                    easing: Sine.easeOut
                });
                TweenMax.to($("div:first", this), 0.3, {
                    css: {
                        top: "-5px"
                    },
                    easing: Sine.easeOut
                })
            }, function () {
                TweenMax.to($(".layout2-description p", this), 0.6, {
                    css: {
                        color: l
                    },
                    easing: Sine.easeOut
                });
                TweenMax.to($("div:first", this), 0.3, {
                    css: {
                        top: "0px"
                    },
                    easing: Sine.easeOut
                })
            })
        }
    }
}
function deleteBannerTimer() {
    clearInterval(delayBannerInterval);
    delayBannerInterval = "";
    if (timerBanner != null) {
        timerBanner.stop();
        timerBanner = null
    }
}
function animateBannerHome2(a) {
    TweenMax.to(a, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut
    })
}
var homeInterval = "";

function moduleHome3() {
    var c = $(txt_modCont);
    var f = $("#module-home-layout3", c);
    var d = $("#module-wrapper", f);
    if (f.length <= 0) {
        return
    }
    moduleUpdate_home3();
    var e = parseInt(c.css("left"), 10);
    c.css("left", "100%").css("visibility", "visible");
    TweenMax.to(c, 0.6, {
        css: {
            left: e
        },
        ease: Circ.easeOut
    });
    var b = $("#video-wrapper", c);
    templateAddMediaVideo(b.attr("data-video-type"), b, undefined);
    $("#home-advertise1, #home-advertise2", c).hover(function () {
        var g = $(".advertise-details", this);
        TweenMax.to(g, 0.3, {
            css: {
                backgroundColor: "#3f3f3f"
            },
            ease: Sine.easeOut
        });
        TweenMax.to($("span", g), 0.3, {
            css: {
                color: "#f1f1f1"
            },
            ease: Sine.easeOut
        })
    }, function () {
        var g = $(".advertise-details", this);
        TweenMax.to(g, 0.3, {
            css: {
                backgroundColor: "#f1f1f1"
            },
            ease: Sine.easeOut
        });
        TweenMax.to($("span", g), 0.3, {
            css: {
                color: "#0c0c0c"
            },
            ease: Sine.easeOut
        })
    });
    audioPlayerPause();
    var a = $(".home-layout-clients a");
    if (a.length > 0) {
        a.hover(function () {
            TweenMax.to($(".client-over", this), 0.6, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            })
        }, function () {
            TweenMax.to($(".client-over", this), 0.6, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            })
        })
    }
    clearCustomInterval(homeInterval);
    homeInterval = setInterval(function () {
        moduleUpdate_home3();
        clearCustomInterval(homeInterval)
    }, 1000)
}
var moduleList = null;

function getElementStyle(b) {
    var a = "";
    if (b.length > 0) {
        a = (b.attr("style") == undefined) ? " " : b.attr("style") + " "
    }
    return a
}
var updateInterval = "";

function moduleUpdate(y, f, g, d, t, z, h) {
    if (endPreviousModule == true) {
        return
    }
    var p = parseInt($("#module-container").css("top"), 10);
    var n = getElem_W_H(y, "h") - p;
    var e = getElem_W_H(y, "w");
    var m = getElem_W_H(f, "h") - p;
    var c = getElem_W_H(y, "w");
    var k = getElem_W_H(g, "h");
    var b = getElem_W_H(g, "w");
    var x = $("#module-container-holder").attr("data-id");
    var w = $(t_scrBarV1);
    var v = $(t_scrBarV2);
    var j = (w.length > 0) ? w : v;
    var s = $(window).height();
    var l = $(window).width();
    var a = getMenuHeight();
    var o = (menuActive == true) ? parseInt($("#menu-container").height(), 10) : parseInt($("#menu-container #menu-hider").height(), 10);
    if (touchDevice == 0 || touchDevice == 1) {
        var u = 0;
        var r = j.length;
        if (j.length > 0) {
            if (l >= 768) {
                j.css("height", s).css("top", "0px")
            } else {
                j.css("height", (s - o) + "px");
                if (touchDevice == 1) {
                    u = 0
                }
            }
        }
        if (n >= k) {
            if (j.length > 0 && j.css("display") != "none") {
                TweenMax.to(j, 0.6, {
                    css: {
                        opacity: "0"
                    },
                    ease: Quad.easeOut,
                    onComplete: function () {
                        j.css("display", "none")
                    }
                })
            }
            if (moduleList != null) {
                moduleList.destroy();
                moduleList = null
            }
            if (z == true) {
                return
            }
            var i = n - k;
            if (d == "none") {
                if (x != "module-position-bc") {
                    f.parent(f).css("top", Math.round(i * 0.5) + "px")
                } else {
                    f.parent(f).css("top", Math.round(i) + "px")
                }
            } else {
                if (d == "height") {
                    g.css("top", Math.round(i * 0.5) + "px")
                } else {
                    if (d == "custom") {
                        if (t == true) {
                            TweenMax.to(g, 0.3, {
                                css: {
                                    top: "0px"
                                },
                                ease: Sine.easeOut
                            })
                        } else {
                            g.css("top", "0px")
                        }
                    }
                }
            }
            if (x == "module-position-bc" || x == "module-position-cc") {
                var q = Math.round((($("#module-container").width() - c) * 0.5));
                if (t == true) {
                    TweenMax.to(y, 0.6, {
                        css: {
                            left: q + "px"
                        },
                        ease: Sine.easeOut
                    })
                } else {
                    y.css("left", q + "px")
                }
            }
        } else {
            if (j.length > 0) {
                switch (d) {
                case "none":
                    f.parent(f).css("top", "0px");
                    g.parent(g).css("top", "0px");
                    break;
                case "height":
                    g.css("top", "0px");
                    break
                }
                TweenMax.killTweensOf(j);
                if (j.css("display") == "none") {
                    j.css("opacity", "0").css("display", "inline")
                }
                TweenMax.to(j, 0.6, {
                    css: {
                        opacity: "1"
                    },
                    ease: Quad.easeOut
                })
            }
            if (moduleList == null) {
                moduleList = y.McCustomList({
                    scrollDirection: "vertical",
                    scrollType: "linear",
                    isTouchDevice: touchDevice
                });
                moduleList.setupList({
                    scrollContainer: g,
                    mouseWheelSupport: "yes",
                    buttonsSupport: "no",
                    draggerContainer: j,
                    draggerScroll: $("#module-scrollbar-dragger", j),
                    totalMinusSize: u,
                    scrollSpeed: 100,
                    offsetSize: 0,
                    horizFixHolder: null,
                    customStartPos: h
                })
            } else {
                moduleList.updateCustomList(u)
            }
            if (x == "module-position-bc" || x == "module-position-cc") {
                var q = Math.round((($("#module-container").width() - c) * 0.5));
                if (x == "module-position-bc") {
                    f.parent(f).css("top", "0px")
                }
                if (t == true) {
                    TweenMax.to(y, 0.6, {
                        css: {
                            left: q + "px"
                        },
                        ease: Sine.easeOut
                    })
                } else {
                    y.css("left", q + "px")
                }
            }
        }
    }
}
function getElem_W_H(c, a) {
    var d = (c.length > 0) ? c.height() + parseInt(c.css("margin-top"), 10) + parseInt(c.css("margin-bottom"), 10) : 0;
    var b = (c.length > 0) ? c.width() : 0;
    return (a == "w") ? b : d
}
function moduleTextPage() {
    var b = $(txt_modCont);
    var g = $("#module-text-page", b);
    var c = $("#module-wrapper", b);
    var a = b.attr("data-id");
    var e = b.width();
    var d = b.height();
    moduleEnd = true;
    if (g.length <= 0) {
        return
    }
    endModuleFunction = endModuleTextPage;
    switch (a) {
    case "module-position-lb":
        break;
    case "module-position-lc":
        var f = (-e) + "px";
        moduleUpdate(g, c, $("div:first", c), sideType);
        b.attr("style", getElementStyle(b) + " left:" + f + "; visibility: visible;");
        TweenMax.to(b, 0.6, {
            css: {
                left: "0px"
            },
            ease: Circ.easeInOut,
            onComplete: moduleUpdate_text_page
        });
        break;
    case "module-position-bc":
        moduleUpdate(b, c, $("div:first", c), sideType);
        var f = parseInt(g.css("top"), 10) + "px";
        b.css("top", d).css("visibility", "visible");
        TweenMax.to(b, 0.6, {
            css: {
                top: "0px"
            },
            ease: Circ.easeInOut,
            onComplete: moduleUpdate_text_page
        });
        break;
    case "module-position-rc":
        b.css("position", "fixed");
        moduleUpdate(g, c, $("div:first", c), sideType);
        var f = (-e) + "px";
        b.attr("style", getElementStyle(b) + " position: fixed; right:" + f + "; visibility: visible;");
        TweenMax.to(b, 0.6, {
            css: {
                right: "0px"
            },
            ease: Circ.easeInOut,
            onComplete: moduleUpdate_text_page
        });
        break;
    case "module-position-cc":
        moduleUpdate(b, c, $("div:first", c), sideType);
        var f = parseInt(b.css("left"), 10);
        b.attr("style", getElementStyle(b) + " left: 100%; visibility: visible;");
        TweenMax.to(b, 0.6, {
            css: {
                left: f
            },
            ease: Circ.easeOut,
            onComplete: moduleUpdate_text_page
        });
        break
    }

}
function endModuleTextPage() {
    var e = $("#module-container-holder");
    var a = e.attr("data-id");
    var c = e.width();
    var b = e.height();
    endPreviousModule = true;
    switch (a) {
    case "module-position-lb":
        break;
    case "module-position-lc":
        var d = (-c) + "px";
        TweenMax.to(e, 0.6, {
            css: {
                left: d
            },
            ease: Circ.easeInOut,
            onComplete: endModuleComplete
        });
        break;
    case "module-position-bc":
        TweenMax.to(e, 0.6, {
            css: {
                top: b + "px"
            },
            ease: Circ.easeInOut,
            onComplete: endModuleComplete
        });
        break;
    case "module-position-rc":
        var d = (-c) + "px";
        TweenMax.to(e, 0.6, {
            css: {
                right: d
            },
            ease: Circ.easeInOut,
            onComplete: endModuleComplete
        });
        break;
    case "module-position-cc":
        var d = $(window).width() + get_OffsetWidth() + "px";
        TweenMax.to(e, 0.6, {
            css: {
                left: d
            },
            ease: Circ.easeInOut,
            onComplete: endModuleComplete
        });
        break
    }
    endModuleFunction = null
}
function endModuleComplete() {
    endPreviousModule = false
}
var previewNewsOpen = false;
var previewNewsIndex = 0;
var totalPreviews = 0;
var previewNewsMediaParent = "";
var newsPrevItemArr = "";
var shortNIV = "news-item-vertical";
var shortNP = "news-preview";
var shortNPH = "#module-news-preview-holder";
var shortNPU = "#news-preview-list";
var newsPrvH = "";
var newsPrvU = "";

function moduleNews() {
    previewNewsOpen = false;
    previewNewsIndex = 0;
    previewNewsMediaParent = "";
    newsPrevItemArr = new Array();
    var j = $(txt_modCont);
    var u = $("#module-news-vertical", j);
    var c = j.width();
    var b = j.height();
    newsPrvH = $(shortNPH);
    newsPrvU = $(shortNPU);
    moduleUpdate(j, $("#module-news-vertical-holder", u), $("#module-news-vertical-holder div:first", u), sideType);
    var w = (-c) + "px";
    j.attr("style", "left:" + w + "; visibility:visible;");
    TweenMax.to(j, 0.6, {
        css: {
            left: "0px"
        },
        delay: 0.1,
        ease: Circ.easeInOut
    });
    endModuleFunction = endModuleTextPage;
    moduleEnd = true;
    newsPrvH.css("display", "inline");
    var e = new Array();
    $(u).find("." + shortNP + "-horizontal-fix").each(function () {
        $(this).css("width", 999999);
        var z = $("ul li", this);
        var y = 0;
        z.each(function () {
            var A = $(".media-holder-news-preview", this),
                B = A.attr("data-src"),
                C = (A.children().length > 0) ? $("#video-wrapper", A) : "null";
            newsPrevItemArr[y] = $(this);
            e[y] = (C == "null") ? B : C;
            y++
        });
        $("ul", this).css("width", $("ul", this).width()).css("left", c);
        $(this).css("width", "")
    });
    newsPrvH.css("display", "");
    var f = $("." + shortNIV + "-read-more", u);
    var g = rgb2hex(f.css("background-color"));
    var n = $("#module-news-vertical-holder");
    var d = $("." + shortNP + "-horizontal-fix").width();
    f.hover(function () {
        TweenMax.to($(this), 0.6, {
            css: {
                backgroundColor: themeColor
            },
            easing: Sine.easeOut
        })
    }, function () {
        TweenMax.to($(this), 0.6, {
            css: {
                backgroundColor: g
            },
            easing: Sine.easeOut
        })
    });
    var t = $("#" + shortNP + "-controls");
    var x = parseInt($("li:first", newsPrvU).css("margin-right"), 10);
    t.css("left", c);
    var k = $(".news-item-vertical", u);
    var s = $(".news-item-vertical-title", $(".news-item-vertical:first", u));
    var m = rgb2hex(s.css("color"));
    k.hover(function () {
        TweenMax.to($(".news-item-vertical-title", this), 0.6, {
            css: {
                color: themeColor
            },
            easing: Sine.easeOut
        })
    }, function () {
        TweenMax.to($(".news-item-vertical-title", this), 0.6, {
            css: {
                color: m
            },
            easing: Sine.easeOut
        })
    });
    k.click(function () {
        previewNewsIndex = k.index(this);
        i(previewNewsIndex)
    });
    var a = 0;
    totalPreviews = newsPrvU.children().length;

    function i(z) {
        if (moduleList != null) {
            moduleList.disableList();
            a = moduleList.currentPosition();
            var B = $(t_scrBarV1);
            TweenMax.to(B, 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut,
                onComplete: function () {
                    B.css("display", "none")
                }
            })
        }
        newsPrvH.css("display", "inline");
        var y = $(n).width() + $(n).position().left + 30;
        var A = 0;
        for (A; A < totalPreviews; A++) {
            if (A == z) {
                newsPrevItemArr[A].css("display", "inline")
            } else {
                newsPrevItemArr[A].css("display", "none")
            }
        }
        $(".news-preview-counter span").empty().append((z + 1) + "/" + totalPreviews);
        TweenMax.to(n, 0.6, {
            css: {
                left: -y
            },
            delay: 0.1,
            easing: Sine.easeOut
        });
        TweenMax.to([newsPrvU, t], 0.6, {
            css: {
                left: "0px"
            },
            delay: 0.1,
            easing: Sine.easeOut,
            onComplete: q,
            onCompleteParams: [z]
        })
    }
    function q(y) {
        var z = y * (d + x);
        if (previewNewsOpen == false) {
            previewNewsOpen = true;
            newsPrvU.css("left", -(z) + "px");
            newsPreviewItemDisplay("inline");
            r(previewNewsOpen)
        } else {
            if (moduleList != null && touchDevice == 1) {
                moduleList.disableList()
            }
            $(".news-preview-counter span").empty().append((y + 1) + "/" + totalPreviews);
            TweenMax.to(newsPrvU, 0.6, {
                css: {
                    left: -z
                },
                delay: 0.1,
                easing: Sine.easeOut,
                onComplete: r,
                onCompleteParams: [previewNewsOpen]
            })
        }
    }
    function r(A) {
        o(true);
        if (moduleList != null) {
            moduleList.destroy(false);
            moduleList = null
        }
        var y = 0;
        for (y; y < totalPreviews; y++) {
            if (y != previewNewsIndex) {
                newsPrevItemArr[y].css("display", "none")
            }
        }
        moduleUpdate(j, $("#module-news-preview-holder", u), $("#module-news-preview-container", u), "custom", 0);
        previewNewsMediaParent = $(".media-holder-news-preview", newsPrevItemArr[previewNewsIndex]);
        if ($("img", previewNewsMediaParent).length <= 0 && $("#video-wrapper", previewNewsMediaParent).length <= 0) {
            audioPlayerPlay();
            previewNewsMediaParent.empty().append('<img width="100%" class="opacity_0" onload="animateNewsPreviewMedia(this)" />');
            $("img", previewNewsMediaParent).attr("src", e[previewNewsIndex])
        } else {
            var z = $("#video-wrapper", previewNewsMediaParent);
            if (z.length > 0) {
                audioPlayerPause();
                if (z.attr("data-active-video") == undefined) {
                    insertVideo(z, previewNewsMediaParent, moduleUpdate_news)
                } else {
                    var B = $("iframe", z);
                    if (B.length > 0) {
                        $("iframe", z).attr("src", z.attr("data-url"))
                    } else {
                        insertVideo(z, previewNewsMediaParent, moduleUpdate_news)
                    }
                }
            } else {
                audioPlayerPlay()
            }
            if (touchDevice == 1) {
                $("#module-news-preview-container", u).css("height", "");
                $("#module-news-preview-container", u).css("height", $("#module-news-preview-container", u).height())
            }
        }
        newsPreviewItemDisplay("inline")
    }
    var h = rgb2hex($("." + shortNP + "-backward ." + shortNP + "-backg").css("background-color"));
    $("." + shortNP + "-backward, ." + shortNP + "-forward, ." + shortNP + "-close").hover(function () {
        TweenMax.to($("." + shortNP + "-backg", this), 0.3, {
            css: {
                backgroundColor: themeColor
            },
            easing: Sine.easeOut
        })
    }, function () {
        TweenMax.to($("." + shortNP + "-backg", this), 0.3, {
            css: {
                backgroundColor: h
            },
            easing: Sine.easeOut
        })
    });
    $("." + shortNP + "-backward, ." + shortNP + "-forward", u).click(function () {
        var y = previewNewsIndex;
        if ($(this).hasClass("" + shortNP + "-backward") == true) {
            y--;
            p(y)
        } else {
            if ($(this).hasClass("" + shortNP + "-forward") == true) {
                y++;
                p(y)
            }
        }
    });

    function p(y) {
        if (y < 0) {
            y = 0
        }
        if (y > totalPreviews - 1) {
            y = totalPreviews - 1
        }
        if (y == previewNewsIndex) {
            return
        }
        o(false);
        if (y != previewNewsIndex) {
            checkActiveVideo($(".media-holder-news-preview", newsPrevItemArr[previewNewsIndex]))
        }
        previewNewsIndex = y;
        q(previewNewsIndex)
    }
    newsPrvU.wipetouch({
        tapToClick: false,
        preventDefault: false,
        wipeLeft: function (y) {
            var z = previewNewsIndex;
            z++;
            p(z)
        },
        wipeRight: function (y) {
            var z = previewNewsIndex;
            z--;
            p(z)
        }
    });
    o(true);

    function o(z) {
        var y = $("." + shortNP + "-close", u);
        y.unbind("click");
        if (z == true) {
            y.click(function () {
                l()
            });
            TweenMax.to(y, 0.4, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            })
        } else {
            TweenMax.to(y, 0.4, {
                css: {
                    opacity: "0.5"
                },
                easing: Sine.easeOut
            })
        }
    }
    function l() {
        previewNewsOpen = false;
        newsPrvU.css("left", 0);
        var y = 0;
        for (y; y < totalPreviews; y++) {
            if (y != previewNewsIndex) {
                newsPrevItemArr[y].css("display", "none")
            }
        }
        TweenMax.to([newsPrvU, t], 0.6, {
            css: {
                left: $(n).width()
            },
            delay: 0.1,
            easing: Sine.easeOut
        });
        TweenMax.to($(t_scrBarV1), 0.3, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        TweenMax.to(n, 0.6, {
            css: {
                left: "0"
            },
            delay: 0.1,
            easing: Sine.easeOut,
            onComplete: v
        });
        checkActiveVideo($(".media-holder-news-preview", newsPrevItemArr[previewNewsIndex]))
    }
    function v() {
        audioPlayerPlay();
        newsPrvH.css("display", "none");
        $(t_scrBarV1).css("display", "none");
        if (moduleList != null) {
            moduleList.destroy(true);
            moduleList = null
        }
        if (touchDevice == 1) {
            setTimeout(function () {
                moduleUpdate(j, $("#module-news-vertical-holder", u), $("#module-news-vertical-holder div:first", u), sideType, null, null, 0)
            }, 100)
        } else {
            moduleUpdate(j, $("#module-news-vertical-holder", u), $("#module-news-vertical-holder div:first", u), sideType, null, null, a)
        }
    }
}
function animateNewsPreviewMedia(b) {
    var a = $(b);
    TweenMax.to($(b).parent(), 0.3, {
        css: {
            height: a.height()
        },
        easing: Sine.easeOut
    });
    TweenMax.to(a, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut,
        onComplete: moduleUpdate_news
    })
}
function newsPreviewItemDisplay(b) {
    var a = 0;
    for (a; a < totalPreviews; a++) {
        newsPrevItemArr[a].css("display", b)
    }
}
function moduleContact() {
    var k = $(txt_modCont);
    var s = $("#module-wrapper", k);
    if (s.length <= 0) {
        return
    }
    var l = $("#module-container #map-holder");
    var o = $(window).height();
    var h = $(window).width();
    var e = screen.width;
    var q = (-get_OffsetWidth()) * 0.5;
    var j = l.height();
    var a = $("#module-contact-container #media-holder-contact", s);
    if (a.length > 0) {
        if (l.length > 0) {
            l.remove()
        }
        j = parseInt(a.css("height"), 10);
        var b = a.attr("data-src");
        a.attr("style", "display: inline; visibility: visible;");
        a.empty().append('<img  onload="animateMedia(this)" width="100%"/>');
        $("img", a).css("opacity", "0").attr("src", b)
    }
    if (l.length > 0) {
        l.attr("style", "display: inline; visibility: visible;");
        l.css("opacity", "0").css("width", e);
        l.css("left", q + "px");
        TweenMax.to(l, 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        var r = l.attr("data-size").split(",");
        var g = l.attr("data-anchor").split(",")
    }
    var p = $(window).width() - get_OffsetWidth() - $(t_scrBarV2).width();
    if (touchDevice == 1) {
        p = $(window).width() - templateMenuW
    }
    s.css("width", p);
    if ($("div:first", s).height() <= $(window).height()) {
        p = p + $(t_scrBarV2).width()
    }
    s.css("width", p);
    moduleUpdate(k, s, $("div:first", s), sideType);
    var f = $("#module-container #module-contact");
    var i = f.height();
    var c = ((o - j) >= i) ? (o - j) : i;
    f.attr("style", "bottom: " + (-c) + "px; height: " + c + "px; visibility: visible;");
    moduleUpdate_contact();
    TweenMax.to(f, 0.6, {
        css: {
            bottom: "0px"
        },
        ease: Circ.easeInOut,
        onComplete: function () {
            if (l.length > 0) {
                l.gMap({
                    controls: {
                        panControl: true,
                        zoomControl: true,
                        mapTypeControl: false,
                        scaleControl: false,
                        streetViewControl: false,
                        overviewMapControl: false
                    },
                    scrollwheel: false,
                    address: l.attr("data-address"),
                    zoom: 16,
                    markers: [{
                        latitude: l.attr("data-latitude"),
                        longitude: l.attr("data-longitude"),
                        icon: {
                            image: l.attr("data-icon"),
                            iconsize: [r[0], r[1]],
                            iconanchor: [g[0], g[1]]
                        }
                    }]
                })
            }
            contactFormSetup()
        }
    });
    var n = $("#module-container").width();
    $("#module-contact-holder").css("left", (n - $("#module-contact-holder").width()) * 0.5 + "px");
    endModuleFunction = null;
    moduleEnd = true;
    var d = "";
    var m = rgb2hex($("#form-reset").css("background-color"));
    $("#form-reset, #form-send").hover(function () {
        TweenMax.to($(this), 0.6, {
            css: {
                backgroundColor: themeColor
            },
            ease: Circ.easeOut
        })
    }, function () {
        TweenMax.to($(this), 0.6, {
            css: {
                backgroundColor: m
            },
            ease: Circ.easeOut
        })
    });
    $(".form-input-half-left input, .form-input-half-right input, .form-input-large input, .form-input-textarea textarea").focus(function () {
        var u = $(this),
            t = u.parent();
        if (t.hasClass("form-input-error-border") == true) {
            setFormInputBorder(t, "form-input-error-border", "form-input-border")
        }
        if (u.val() == (u.attr("name") + " *")) {
            d = u.val();
            u.val("")
        }
        TweenMax.to($(".form-input-background", t), 0.6, {
            css: {
                backgroundColor: "#ffffff",
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    });
    $(".form-input-half-left input, .form-input-half-right input, .form-input-large input, .form-input-textarea textarea").focusout(function () {
        var t = $(this);
        if (t.val() == "" || t.val() == " ") {
            t.val(d)
        }
        TweenMax.to($(".form-input-background", t.parent()), 0.6, {
            css: {
                backgroundColor: "#9e9e9e",
                opacity: "0.2"
            },
            ease: Circ.easeOut
        })
    })
}
function animateMedia(a) {
    TweenMax.to(a, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut
    })
}
var nameInst = "",
    email = "",
    phone = "",
    messg = "",
    nameDefTxt = "",
    emailDefTxt = "",
    phoneDefTxt = "",
    messgDefTxt = "",
    resetBtn = "",
    sendBtn = "",
    sendBtnText = "",
    btnTextSend = "";

function contactFormSetup() {
    nameInst = $("#contact-form #name");
    email = $("#contact-form #email");
    phone = $("#contact-form #phone");
    messg = $("#contact-form #message");
    nameDefTxt = nameInst.val(), emailDefTxt = email.val(), phoneDefTxt = phone.val(), messgDefTxt = messg.val();
    resetBtn = $("#contact-form #form-reset");
    sendBtn = $("#contact-form #form-send");
    sendBtnText = $("p", sendBtn).text();
    btnTextSend = (sendBtn.attr("data-sending-txt") != undefined) ? sendBtn.attr("data-sending-txt") : "null";
    var e = [nameInst.parent(nameInst), email.parent(email), phone.parent(phone), messg.parent(messg)];
    var b = $("#response-form");
    resetBtn.click(function () {
        resetFormValues();
        setFormArrInputBorder(e, "form-input-error-border", "form-input-border");
        TweenMax.to(b, 0.4, {
            css: {
                opacity: 0
            },
            delay: 0.1,
            easing: Sine.easeOut,
            onComplete: function () {
                $("p", b).css("display", "inline-block");
                $("#form-warning", b).css("display", "inline-block")
            }
        })
    });
    var a = false;
    sendBtn.click(function () {
        if (a == true) {
            return
        }
        var i = c();
        b.css("display", "inline-block").css("opacity", "0");
        if (i.valid == true) {
            a = true;
            if (contactFormDemo == true) {
                if (btnTextSend != "null") {
                    d($("p", sendBtn), btnTextSend);
                    TweenMax.to(sendBtn, 0.6, {
                        css: {
                            opacity: 0.5
                        },
                        ease: Sine.easeOut,
                        onComplete: function () {
                            a = false;
                            d($("p", sendBtn), sendBtnText);
                            TweenMax.to(sendBtn, 0.4, {
                                css: {
                                    opacity: 1
                                },
                                easing: Sine.easeOut
                            });
                            runSendAnimation("inline-block", "none", "none")
                        }
                    })
                }
            } else {
                if (btnTextSend != "null") {
                    d($("p", sendBtn), btnTextSend);
                    TweenMax.to(sendBtn, 0.6, {
                        css: {
                            opacity: 0.5
                        },
                        ease: Sine.easeOut
                    })
                }
                $.ajax({
                    url: phpUrlPath,
                    type: "post",
                    data: ({
                        senderName: nameInst.val(),
                        senderEmail: email.val(),
                        senderPhone: phone.val(),
                        senderMessage: messg.val()
                    }),
                    dataType: "json",
                    success: function (j) {
                        b.css("display", "inline-block").css("opacity", "1");
                        $("p", b).css("display", "inline-block");
                        if (j.result == true) {
                            runSendAnimation("inline-block", "none", "none")
                        } else {
                            $("#server-error", b).empty().text(j.msg);
                            runSendAnimation("none", "none", "inline-block")
                        }
                        d($("p", sendBtn), sendBtnText);
                        TweenMax.to(sendBtn, 0.4, {
                            css: {
                                opacity: 1
                            },
                            easing: Sine.easeOut
                        });
                        a = false
                    }
                })
            }
        } else {
            if (i.highlightInp != "null") {
                var f = i.highlightInp,
                    g = f.length;
                while (g--) {
                    var h = f[g].parent(f[g]);
                    setFormInputBorder(h, "form-input-border", "form-input-error-border")
                }
            }
            b.css("display", "inline-block").css("opacity", "0");
            $("p", b).css("display", "none");
            $("#form-warning", b).css("display", "inline-block");
            TweenMax.to(b, 0.4, {
                css: {
                    opacity: 1
                },
                delay: 0.1,
                easing: Sine.easeOut
            })
        }
    });

    function d(f, g) {
        f.empty().append(g)
    }
    function c() {
        var j = true,
            m = nameInst.val(),
            g = email.val(),
            l = phone.val(),
            f = messg.val();
        var k = [];
        var h = 0;
        if (m == nameDefTxt || m == "") {
            j = false;
            k[h] = nameInst;
            h++
        }
        if (g == emailDefTxt || g == "" || isValidEmailAddress(g) == false) {
            j = false;
            k[h] = email;
            h++
        }
        if (l == phoneDefTxt || l == "" || isValidPhone(l) == false) {
            j = false;
            k[h] = phone;
            h++
        }
        if (f == messgDefTxt || f == "") {
            j = false;
            k[h] = messg;
            h++
        }
        k = (k.length > 0) ? k : "null";
        return {
            valid: j,
            highlightInp: k
        }
    }
}
function resetFormValues() {
    nameInst.val(nameDefTxt);
    email.val(emailDefTxt);
    phone.val(phoneDefTxt);
    messg.val(messgDefTxt)
}
function runSendAnimation(e, d, c) {
    var b = $("#response-form");
    if (b.length > 0) {
        resetFormValues();
        b.css("display", "inline-block").css("opacity", "0");
        $("p", b).css("display", e);
        $("#form-warning", b).css("display", d);
        $("#server-error", b).css("display", c);
        var a = (c != "none") ? 2 : 1.3;
        TweenMax.to(b, 0.4, {
            css: {
                opacity: 1
            },
            easing: Sine.easeOut,
            onComplete: function () {
                TweenMax.to(b, 0.4, {
                    css: {
                        opacity: 0
                    },
                    delay: a,
                    easing: Sine.easeOut
                })
            }
        })
    }
}
function setFormArrInputBorder(b, d, c) {
    if ($.isArray(b) == true) {
        var a = b.length;
        while (a--) {
            setFormInputBorder(b[a], d, c)
        }
    }
}
function setFormInputBorder(a, c, b) {
    if (a.hasClass(c) == true) {
        a.removeClass(c)
    }
    if (a.hasClass(b) == false) {
        a.addClass(b)
    }
}
function isValidPhone(a) {
    var b = new RegExp(/^[0-9-+]+$/);
    return b.test(a)
}
function isValidEmailAddress(b) {
    var a = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    return a.test(b)
}
function moduleShowreel() {
    var b = $(txt_modCont);
    var f = $("#module-showreel", b);
    if (f.length <= 0) {
        return
    }
    var a = b.attr("data-id");
    var e = f.width();
    moduleUpdate(b, f, $("div:first", f), sideType);
    f.css("width", "0px").css("visibility", "visible");
    var c = $("#video-wrapper", b);
    var d = $("#module-showreel-holder", f);
    if (touchDevice == 1) {
        if (c.children().length > 0) {
            tempVid = $("div:first", c);
            d.empty();
            d.append(tempVid)
        }
        c = $("#video-wrapper", b)
    }
    c.empty();
    audioPlayerPause();
    if (c.length > 0) {
        templateAddMediaVideo(c.attr("data-video-type"), c, undefined)
    }
    TweenMax.to(f, 0.4, {
        css: {
            width: e + "px"
        },
        ease: Quad.easeOut
    });
    endModuleFunction = endModuleShowreel;
    moduleEnd = true
}
function endModuleShowreel() {
    var b = $("#module-showreel");
    var a = b.width();
    TweenMax.to(b, 0.6, {
        css: {
            width: "0px"
        },
        ease: Quad.easeInOut,
        onComplete: function () {
            destroyVideoJS()
        }
    });
    audioPlayerPlay();
    endModuleFunction = null
}
function reverseEndModuleShowreel() {
    var a = $(txt_modCont);
    var e = $("#module-showreel", a);
    if (e.length <= 0) {
        return
    }
    e.css("visibility", "hidden");
    e.css("width", "");
    var d = e.width();
    e.css("width", "0px").css("visibility", "visible");
    var b = $("#video-wrapper", a);
    var c = $("#module-showreel-holder", e);
    if (touchDevice == 1) {
        if (b.children().length > 0) {
            tempVid = $("div:first", b);
            c.empty();
            c.append(tempVid)
        }
    }
    b = $("#video-wrapper", a);
    b.empty();
    if (b.length > 0) {
        templateAddMediaVideo(b.attr("data-video-type"), b, undefined)
    }
    TweenMax.to(e, 0.4, {
        css: {
            width: d + "px"
        },
        ease: Quad.easeOut
    });
    endModuleFunction = endModuleShowreel;
    moduleEnd = true
}
function moduleFullscreenVideo() {
    var b = $(txt_modCont);
    var f = $("#module-fullscreen-video", b);
    var c = $(window).width() - get_OffsetWidth();
    var a = $(window).height();
    f.css("opacity", "0");
    f.attr("style", "width:" + c + "px; height:" + a + "px;");
    b.css("visibility", "visible");
    TweenMax.to(f, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut
    });
    audioPlayerPause();
    var e = $("#video-wrapper", b);
    if (e.length > 0) {
        e.attr("data-width", c);
        e.attr("data-height", a);
        var d = $("#fullscreen-video-holder", f);
        if (touchDevice == 1) {
            if (e.children().length > 0) {
                tempVid = $("div:first", e);
                d.empty();
                d.append(tempVid)
            }
            e = $("#video-wrapper", b)
        }
        e.empty();
        templateAddMediaVideo(e.attr("data-video-type"), e, undefined)
    }
}
function modulePricingTables() {
    var a = $(txt_modCont);
    var e = $("#module-pricing", a);
    if (e.length <= 0) {
        return
    }
    var c = a.width();
    var b = a.height();
    moduleUpdate(a, e, $("div:first", e), sideType);
    var d = parseInt(a.css("left"), 10);
    a.css("left", "100%").css("visibility", "visible");
    TweenMax.to(a, 0.5, {
        css: {
            left: d
        },
        delay: 0.1,
        ease: Circ.easeOut
    });
    $("#pricing-column-holder", e).hover(function () {
        $(this).css("z-index", 2);
        if ($.browser.msie) {
            if ($.browser.version != "8.0" && ($.browser.version == "9.0" && isIE9Std() == true)) {
                if ($(this).hasClass("shadow-side-all-pricing-tables") == false) {
                    $(this).addClass("shadow-side-all-pricing-tables")
                }
            }
        } else {
            if ($(this).hasClass("shadow-side-all-pricing-tables") == false) {
                $(this).addClass("shadow-side-all-pricing-tables")
            }
        }
        TweenMax.to($("div:first", this), 0.4, {
            css: {
                backgroundColor: themeColor
            },
            ease: Sine.easeOut
        })
    }, function () {
        $(this).css("z-index", 1);
        if ($.browser.msie) {
            if ($.browser.version != "8.0" && ($.browser.version == "9.0" && isIE9Std() == true)) {
                if ($(this).hasClass("shadow-side-all-pricing-tables") == true) {
                    $(this).removeClass("shadow-side-all-pricing-tables")
                }
            }
        } else {
            if ($(this).hasClass("shadow-side-all-pricing-tables") == true) {
                $(this).removeClass("shadow-side-all-pricing-tables")
            }
        }
        TweenMax.to($("div:first", this), 0.4, {
            css: {
                backgroundColor: "#909090"
            },
            ease: Sine.easeOut
        })
    });
    $("#pricing-column-holder #pricing-buy-holder", e).hover(function () {
        TweenMax.to($(this), 0.4, {
            css: {
                backgroundColor: themeColor
            },
            ease: Sine.easeOut
        })
    }, function () {
        TweenMax.to($(this), 0.4, {
            css: {
                backgroundColor: "#3F3F3F"
            },
            ease: Sine.easeOut
        })
    })
}
function customHoverAnimation(c, d, b, e) {
    var a = getDirectionCSS(b, {
        x: d.pageX,
        y: d.pageY
    });
    if (c == "over") {
        e.removeClass();
        e.css("left", a.from.val1);
        e.css("top", a.from.val2);
        TweenMax.to(e, 0.3, {
            css: {
                left: a.to.val1,
                top: a.to.val2
            },
            ease: Sine.easeInOut
        })
    } else {
        if (c == "out") {
            TweenMax.to(e, 0.3, {
                css: {
                    left: a.from.val1,
                    top: a.from.val2
                },
                ease: Sine.easeInOut
            })
        }
    }
}
function moduleFullWidth() {
    var b = $(txt_modCont);
    var f = $("#module-full-width", b);
    var c = $("#module-wrapper", f);
    if (f.length <= 0) {
        return
    }
    var d = $(window).width() - get_OffsetWidth();
    var e = $("#module-full-width-media");
    if (touchDevice == 1) {
        d = $(window).width() - templateMenuW
    }
    f.css("width", d);
    if ($("#module-full-width-holder-text", f).height() > $(window).height() && touchDevice == 0) {
        d = d - $(t_scrBarV2).width()
    }
    b.css("opacity", "0");
    b.css("visibility", "visible");
    e.css("height", "200px");
    TweenMax.to(b, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut
    });
    if (e.attr("data-src") != undefined) {
        audioPlayerPlay();
        e.empty().append('<img onload="animateFullWidthMedia(this)" width="100%" />');
        $("img", e).css("opacity", "0").attr("src", e.attr("data-src"))
    } else {
        var a = $("#video-wrapper", e);
        if (touchDevice == 1) {
            if (a.children().length > 0) {
                tempVid = $("div:first", a);
                e.empty();
                e.append(tempVid)
            }
        }
        a = $("#video-wrapper", e);
        if (a.length > 0) {
            audioPlayerPause();
            f.css("width", d);
            a.attr("data-width", e.width());
            e.css("height", a.attr("data-height"));
            moduleUpdate(b, c, $("div:first", c), sideType);
            templateAddMediaVideo(a.attr("data-video-type"), a, undefined);
            moduleUpdate_full_width(true)
        } else {
            moduleUpdate_full_width(true)
        }
    }
}
function animateFullWidthMedia(b) {
    var a = $(b);
    TweenMax.to($(b).parent(), 0.4, {
        css: {
            height: a.height()
        },
        easing: Sine.easeOut
    });
    TweenMax.to(a, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut,
        onComplete: function () {
            $(b).parent().css("overflow", "visible").css("height", "");
            moduleUpdate_full_width(true)
        }
    })
}
var initialNumberColumns = 4;
var maximNumberColumns = 4;
var initialThumbW = 0;
var initialThumbH = 0;
var previewMediaArr = Array();
var previewMediaDescArr = Array();
var previewBorderSize = 0;
var currIndex = 0;
var previewFullWidthOpen = false;

function moduleFullWidthGallery() {
    var a = $(txt_modCont);
    var d = $("#module-full-width-gallery", a);
    if (d.length <= 0) {
        return
    }
    var c = $(".full-width-item", d);
    var b = $(window).width() - get_OffsetWidth() - $(t_scrBarV2).width();
    initialThumbW = c.width();
    initialThumbH = c.height();
    if (touchDevice == 1) {
        b = $(window).width() - get_OffsetWidth()
    }
    checkItems();
    d.css("width", b);
    a.css("opacity", "0").css("visibility", "visible");
    TweenMax.to(a, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut
    });
    moduleUpdate(a, d, $("div:first", d), sideType);
    c.hover(function (e) {
        customHoverAnimation("over", e, $(this), $("#thumb-image-hover", this))
    }, function (e) {
        customHoverAnimation("out", e, $(this), $("#thumb-image-hover", this))
    });
    setFullWidthPreview();
    storeFullWidthPreviewMedia();
    c.click(function () {
        currIndex = 0;
        changeFWPreviewMediaDesc(-1);
        var e = $(".full-width-item").index(this);
        currIndex = e;
        if (moduleList != null) {
            moduleList.disableList()
        }
        $("#full-width-preview-media-holder").find("#preview-media-holder").empty();
        loadFullWidthPreview(e)
    })
}
function storeFullWidthPreviewMedia() {
    previewMediaArr = new Array();
    var a = 0;
    $("#full-width-preview #full-width-preview-media-holder").find("#preview-media-holder").children().each(function () {
        if ($(this).attr("id") == "preview-media-image") {
            previewMediaArr[a] = '<img id="preview-media-image" src="' + $(this).attr("data-url") + '" title="' + $(this).attr("data-title") + '" alt="' + $(this).attr("data-alt") + '" />'
        } else {
            if ($(this).attr("id") == "video-wrapper") {
                var b = $(this).attr("data-type");
                previewMediaArr[a] = $(this)
            }
        }
        a++
    });
    previewMediaDescArr = new Array();
    a = 0;
    $(".full-width-info-holder").find(".full-width-info-holder-desc").each(function () {
        previewMediaDescArr[a] = $(this).get(0);
        a++
    });
    $("#full-width-preview-media-holder").find("#preview-media-holder").empty()
}
function changeFWPreviewMediaDesc(b, a) {
    if (b != -1) {
        var d = previewMediaDescArr[b];
        TweenMax.to($(d), 0.4, {
            css: {
                opacity: "0"
            },
            ease: Circ.easeOut,
            onComplete: hideFWPrevMediaDesc,
            onCompleteParams: [b]
        })
    } else {
        $(".full-width-info-holder").find(".full-width-info-holder-desc").each(function () {
            $(this).css("display", "none")
        })
    }
    if (a != -1 && a != undefined) {
        var c = previewMediaDescArr[a];
        $(c).attr("style", "visibility: visible; display: inline;");
        $(c).css("opacity", "0");
        TweenMax.to($(c), 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    }
}
function hideFWPrevMediaDesc(a) {
    var b = previewMediaDescArr[a];
    $(b).attr("style", "visibility: hidden; display: inline;");
    $(b).css("opacity", "0")
}
function emptyPreviewMediaHolder() {
    $("#full-width-preview-media-holder").find("#preview-media-holder").empty()
}
function updateFullWidthPreviewPosition() {
    var p = $("#full-width-preview");
    var g = $("#full-width-preview-info-holder", p);
    var o = $("#full-width-preview-media-holder");
    var h = $(window).width();
    var d = $(window).height();
    if (h >= 768) {
        g.css("position", "fixed").css("top", "0px").css("right", "0px").css("bottom", "auto").css("height", "100%").css("width", "")
    }
    var q = g.width();
    var m = (h < 768) ? 0 : q;
    var l = (h < 768) ? prevRatio * d : 0;
    var a = h - m;
    var i = d - l;
    o.attr("style", "width:" + a + "px; height:" + i + "px;");
    var b = -((l + $(".preview-arrow-backward").height()) * 0.5);
    if (m <= 0) {
        g.css("position", "absolute").css("top", "auto").css("right", "0px").css("bottom", "0px").css("height", l + "px").css("width", "100%")
    }
    $(".preview-arrow-backward").css("margin-top", b + "px");
    $(".preview-arrow-forward").css("margin-top", b + "px");
    $(".preview-arrow-close").css("right", m);
    $(".preview-arrow-forward").css("right", m);
    var n = fwMediaType;
    if (n == "preview-media-image") {
        var c = $("#preview-media-load");
        $(c).css("width", "");
        $(c).css("height", "");
        checkSizeMedia($(c), a, i);
        var k = $(c).width() + previewBorderSize * 2;
        var f = $(c).height() + previewBorderSize * 2;
        var e = -f * 0.5;
        var j = -k * 0.5;
        $("#preview-media-holder").attr("style", "width: 100%; height: 100%; margin: 0px; top: 50%; left: 50%; margin-top:" + e + "px; margin-left:" + j + "px;")
    }
}
var prevRatio = 0.2;

function loadFullWidthPreview(f) {
    previewFullWidthOpen = true;
    var n = $("#full-width-preview");
    var m = $("#full-width-preview-media-holder");
    if (n.length <= 0) {
        return
    }
    n.css("opacity", "0");
    n.css("display", "inline");
    n.css("visibility", "visible");
    var h = $("#full-width-preview-info-holder", n);
    var i = $(window).width();
    var d = $(window).height();
    if (i >= 768) {
        h.css("position", "fixed").css("top", "0px").css("bottom", "auto").css("height", "100%").css("width", "");
        h.css("right", -h.width())
    }
    TweenMax.to(n, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut,
        onComplete: g
    });

    function g() {
        a(true);
        e();
        $(".full-width-preview-media-holder-background, .preview-arrow-close", n).click(function () {
            emptyPreviewMediaHolder();
            a(false)
        })
    }
    var o = h.width();
    var l = (i < 768) ? 0 : o;
    var k = (i < 768) ? prevRatio * d : 0;
    var b = i - l;
    var j = d - k;
    m.attr("style", "width:" + b + "px; height:" + j + "px;");
    var c = -((k + $(".preview-arrow-backward").height()) * 0.5);
    $(".preview-arrow-backward").css("margin-top", c + "px");
    $(".preview-arrow-forward").css("margin-top", c + "px");
    $(".preview-arrow-close").css("right", l);
    $(".preview-arrow-forward").css("right", l);

    function a(p) {
        i = $(window).width();
        d = $(window).height();
        l = (i < 768) ? 0 : o;
        k = (i < 768) ? prevRatio * d : 0;
        var s = (-l) + "px";
        if (l <= 0) {
            var q = -((k + $(".preview-arrow-backward").height()) * 0.5);
            $(".preview-arrow-backward").css("margin-top", q + "px");
            $(".preview-arrow-forward").css("margin-top", q + "px");
            h.css("position", "absolute").css("top", "auto").css("bottom", "0px").css("right", "0px").css("height", k + "px").css("width", "100%")
        }
        if (p == true) {
            if (l <= 0) {
                h.css("bottom", -k)
            }
            changeFWPreviewMediaDesc(-1, currIndex);
            h.css("visibility", "visible");
            if (l > 0) {
                TweenMax.to(h, 0.3, {
                    css: {
                        right: "0px"
                    },
                    delay: 0.1,
                    ease: Quad.easeInOut
                })
            } else {
                TweenMax.to(h, 0.3, {
                    css: {
                        bottom: "0px"
                    },
                    delay: 0.1,
                    ease: Quad.easeInOut
                })
            }
        } else {
            TweenMax.to(m, 0.3, {
                css: {
                    opacity: "0"
                },
                ease: Circ.easeInOut
            });
            TweenMax.to([$(".preview-arrow-close"), $(".preview-arrow-forward"), $(".preview-arrow-backward")], 0.3, {
                css: {
                    opacity: "0"
                },
                ease: Circ.easeInOut
            });
            if (l > 0) {
                TweenMax.to(h, 0.3, {
                    css: {
                        right: s
                    },
                    ease: Circ.easeInOut,
                    onComplete: r
                })
            } else {
                TweenMax.to(h, 0.3, {
                    css: {
                        bottom: -k
                    },
                    ease: Circ.easeInOut,
                    onComplete: r
                })
            }
        }
        function r() {
            previewFullWidthOpen = false;
            justOpenedPreivew = true;
            animationLoadFWPreviewDone = true;
            $("#full-width-preview-media-holder", n).unbind("click");
            $(".preview-arrow-close", n).unbind("click");
            TweenMax.to(n, 0.4, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut,
                onComplete: t
            })
        }
        function t() {
            audioPlayerPlay();
            if (moduleList != null) {
                moduleList.enableList()
            }
            n.css("display", "none")
        }
    }
    function e() {
        m.css("opacity", "0");
        m.css("visibility", "visible");
        TweenMax.to(m, 0.2, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        TweenMax.to($(".full-width-preview-media-loader"), 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        loadFullWidthMedia()
    }
}
function loadFullWidthMedia() {
    var h = previewMediaArr[currIndex];
    var m = $(h).attr("id");
    var l = $("#full-width-preview-media-holder");
    if (m == "preview-media-image") {
        audioPlayerPlay();
        var c = l.width() - previewBorderSize * 2;
        var g = l.height() - previewBorderSize * 2;
        var a = $("#preview-media-load");
        fwMediaType = m;
        fwW = c;
        fwH = g;
        a.css("opacity", "0");
        var f = l.find("#preview-media-holder");
        f.append('<img id="preview-media-load" onload="animateFullWidthPreviewMedia()" title="" alt="" />');
        a = $("#preview-media-load");
        a.attr("style", "visibility: visible; display: inline;");
        a.css("opacity", "0");
        a.attr("src", $(h).attr("src"));
        a.attr("title", $(h).attr("title"));
        a.attr("alt", $(h).attr("alt"))
    } else {
        if (m == "video-wrapper") {
            audioPlayerPause();
            l.find("#preview-media-holder").empty();
            var f = $("#preview-media-holder");
            var k = parseInt($(h).attr("data-width"), 10);
            var e = parseInt($(h).attr("data-height"), 10);
            k = (k <= $(window).width()) ? k : $(window).width();
            e = (e <= $(window).height()) ? e : $(window).width() * 0.5;
            var j = k + previewBorderSize * 2;
            var d = e + previewBorderSize * 2;
            var b = -d * 0.5;
            var i = -j * 0.5;
            f.attr("style", "width: " + j + "px; height: " + d + "px; margin: 0px; top: 50%; left: 50%; margin-top:" + b + "px; margin-left:" + i + "px;");
            f.append('<div id="video-wrapper"></div>');
            templateAddMediaVideo($(h).attr("data-video-type"), $(h), $("#video-wrapper"));
            TweenMax.to($(".full-width-preview-media-loader"), 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            });
            loadingAnimationDone = true;
            animationLoadFWPreviewDone = true;
            fwMediaType = m;
            fullWidthFadeInMedia(m)
        }
    }
}
var fwMediaType = "";
var fwW = "";
var fwH = "";

function animateFullWidthPreviewMedia() {
    var i = fwMediaType;
    var a = fwW;
    var h = fwH;
    var b = "";
    if (i == "preview-media-image") {
        b = $("#preview-media-load");
        $(b).css("width", "");
        $(b).css("height", "");
        checkSizeMedia($(b), a, h)
    }
    animationLoadFWPreviewDone = true;
    if ($(b).width() != null) {
        var g = $(b).width() + previewBorderSize * 2;
        var d = $(b).height() + previewBorderSize * 2;
        var c = -d * 0.5;
        var f = -g * 0.5;
        var e = $("#preview-media-holder");
        e.attr("style", "width: " + g + "px; height: " + d + "px; margin: 0px; top: 50%; left: 50%; margin-top:" + c + "px; margin-left:" + f + "px;");
        TweenMax.to($(".full-width-preview-media-loader"), 0.2, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        fullWidthFadeInMedia(i);
        loadingAnimationDone = true
    }
}
var justOpenedPreivew = true;

function fullWidthFadeInMedia(c) {
    if (c == "preview-media-image") {
        TweenMax.to($("#preview-media-load"), 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    }
    if (justOpenedPreivew == true) {
        justOpenedPreivew = false;
        var f = $("#full-width-preview-media-holder");
        var b = f.width() - 60;
        var e = $(".preview-arrow-close");
        var d = $(".preview-arrow-backward");
        var h = $(".preview-arrow-forward");
        e.css("opacity", "0").css("display", "inline");
        d.css("opacity", "0").css("display", "inline");
        h.css("opacity", "0").css("display", "inline");
        TweenMax.to([e, d, h], 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeInOut
        });
        var g = $(".preview-arrow-backward .preview-arrow-backg").css("opacity");
        var a = rgb2hex($(".preview-arrow-backward .preview-arrow-backg").css("background-color"));
        $(".preview-arrow-backward, .preview-arrow-forward, .preview-arrow-close").unbind("mouseenter mouseleave");
        $(".preview-arrow-backward, .preview-arrow-forward, .preview-arrow-close").hover(function () {
            TweenMax.to($(".preview-arrow-backg", this), 0.3, {
                css: {
                    opacity: "1",
                    backgroundColor: themeColor
                },
                easing: Sine.easeOut
            })
        }, function () {
            TweenMax.to($(".preview-arrow-backg", this), 0.3, {
                css: {
                    opacity: g,
                    backgroundColor: a
                },
                easing: Sine.easeOut
            })
        });
        $(".preview-arrow-backward").unbind("click");
        $(".preview-arrow-forward").unbind("click");
        $(".preview-arrow-backward").click(function () {
            TweenMax.to($(".full-width-preview-media-loader"), 0.3, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            });
            changeFullWidthPreviewMedia(-1)
        });
        $(".preview-arrow-forward").click(function () {
            TweenMax.to($(".full-width-preview-media-loader"), 0.3, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            });
            changeFullWidthPreviewMedia(1)
        })
    }
}
var animationLoadFWPreviewDone = true;

function changeFullWidthPreviewMedia(c) {
    var a = currIndex + c;
    if (a > previewMediaArr.length - 1) {
        a = 0
    } else {
        if (a < 0) {
            a = previewMediaArr.length - 1
        }
    }
    if (currIndex != a) {
        var b = previewMediaArr[currIndex];
        if ($(b).attr("id") == "preview-media-image") {
            $("#preview-media-load").css("opacity", 0);
            $("#preview-media-load").attr("style", "visibility: hidden; display: none;")
        } else {
            if ($(b).attr("id") == "video-wrapper") {
                $(b).css("opacity", "0");
                $(b).attr("style", "visibility: hidden; display: none;")
            }
        }
        changeFWPreviewMediaDesc(currIndex, a);
        currIndex = a;
        b = previewMediaArr[currIndex];
        $("#full-width-preview-media-holder").find("#preview-media-holder").empty();
        loadFullWidthMedia()
    }
}
function setFullWidthPreview() {
    var a = $("#full-width-preview");
    if ($("#full-width-preview").length > 0) {
        a.remove();
        $("#template-wrapper").after(a)
    }
}
function checkItems() {
    var e = $(window).width() - get_OffsetWidth() - $(t_scrBarV2).width();
    var d = $(txt_modCont);
    var h = $("#module-full-width-gallery", d);
    var g = e / maximNumberColumns;
    var a = g / initialThumbW;
    var b = initialThumbH / initialThumbW * g;
    if (initialThumbW <= 0) {
        return
    }
    if (touchDevice == 1) {
        e = $(window).width() - get_OffsetWidth()
    }
    h.css("width", e);
    if (a >= 0.8 && a <= 1) {
        g = e / maximNumberColumns;
        b = initialThumbH / initialThumbW * g
    } else {
        if (a < 0.8 || a > 1) {
            g = e / (maximNumberColumns - 1);
            a = g / initialThumbW;
            if (a <= 1) {
                maximNumberColumns--;
                g = e / maximNumberColumns;
                b = initialThumbH / initialThumbW * g;
                a = g / initialThumbW;
                while (a < 0.8) {
                    maximNumberColumns--;
                    g = e / maximNumberColumns;
                    b = initialThumbH / initialThumbW * g;
                    a = g / initialThumbW
                }
                if (a > 1) {
                    g = e / maximNumberColumns;
                    b = initialThumbH / initialThumbW * g;
                    while (g > initialThumbW) {
                        maximNumberColumns++;
                        g = e / maximNumberColumns;
                        b = initialThumbH / initialThumbW * g
                    }
                }
            } else {
                g = e / maximNumberColumns;
                b = initialThumbH / initialThumbW * g;
                while (g > initialThumbW) {
                    maximNumberColumns++;
                    g = e / maximNumberColumns;
                    b = initialThumbH / initialThumbW * g
                }
            }
        }
    }
    var c = 0;
    var f = 0;
    $("#module-full-width-holder").find(".full-width-item").each(function () {
        $(this).css("position", "absolute");
        var j = 0;
        var i = 0;
        if (c < maximNumberColumns) {
            j = Math.round(b) * f;
            i = Math.round(g) * c;
            c++
        } else {
            c = 0;
            f++;
            j = Math.round(b) * f;
            i = Math.round(g) * c;
            c++
        }
        if (touchDevice == 0) {
            TweenMax.to($("img", this), 0.6, {
                css: {
                    width: Math.round(g),
                    height: Math.round(b)
                },
                easing: Sine.easeOut
            });
            TweenMax.to($(this), 0.6, {
                css: {
                    width: Math.round(g),
                    height: Math.round(b),
                    left: i,
                    top: j
                },
                easing: Sine.easeOut
            })
        } else {
            $("img", this).css("width", Math.round(g)).css("height", Math.round(b));
            $(this).css("width", Math.round(g)).css("height", Math.round(b)).css("left", i).css("top", j)
        }
    });
    f++;
    $("div:first", h).css("height", f * Math.round(b))
}
var columnsPreviewOpen = false;
var previewAnimDone = true;
var columnsPreviewIndex = 0;
var columnsPrevItemArr = "";
var totalColPreviews = 0;
var $originalDataPos = 0;
var tempSlidesControl = "";
var colSlidesControl = "";

function modulePageColumns() {
    columnsPreviewOpen = false;
    previewAnimDone = true;
    columnsPreviewIndex = 0;
    columnsPrevItemArr = new Array();
    totalColPreviews = 0;
    var p = $(txt_modCont);
    var D = $("#module-columns", p);
    if (D.length <= 0) {
        return
    }
    var d = p.attr("data-id");
    var c = p.width();
    var b = p.height();
    var f = $("#module-columns-wrapper", p);
    var x = $("#module-columns-preview-wrapper", p);
    checkColumnSize();
    moduleUpdate(p, f, $("div:first", f), sideType);
    var H = Math.abs($("#module-container").width() - p.width()) * 0.5;
    p.css("left", "100%").css("visibility", "visible");
    TweenMax.to(p, 0.6, {
        css: {
            left: H
        },
        ease: Circ.easeOut
    });
    var w = $("#module-columns-holder div:first", D).attr("class");
    w = $("." + w);
    var G = "#3f3f3f";
    var t = rgb2hex(w.css("background-color"));
    var n = rgb2hex($(".thumb-tag h1", w).css("color"));
    var C = rgb2hex($(".thumb-tag h2", w).css("color"));
    if (touchDevice == 0) {
        w.unbind("mouseenter mouseleave");
        w.hover(function (J) {
            customHoverAnimation("over", J, $(this), $("#thumb-image-hover", this));
            var K = $(".thumb-tag h1", this);
            var I = $(".thumb-tag h2", this);
            TweenMax.to([K, I], 0.6, {
                css: {
                    color: t
                },
                ease: Quad.easeOut
            });
            TweenMax.to($(this), 0.6, {
                css: {
                    backgroundColor: G
                },
                ease: Quad.easeOut
            })
        }, function (J) {
            customHoverAnimation("out", J, $(this), $("#thumb-image-hover", this));
            var K = $(".thumb-tag h1", this);
            var I = $(".thumb-tag h2", this);
            TweenMax.to(K, 0.6, {
                css: {
                    color: n
                },
                ease: Circ.easeOut
            });
            TweenMax.to(I, 0.6, {
                css: {
                    color: C
                },
                ease: Circ.easeOut
            });
            TweenMax.to($(this), 0.6, {
                css: {
                    backgroundColor: t
                },
                ease: Quad.easeOut
            })
        })
    }
    var y = new Array();
    var s = $("#module-columns-preview-holder", x).width();
    x.css("display", "inline");
    $(x, D).find(".columns-preview-horizontal-fix").each(function () {
        $(this).css("width", 9999999);
        var J = $("ul", this),
            K = $("ul li", this),
            I = 0;
        K.each(function () {
            var L = $(".columns-preview-media", this),
                M = L.attr("data-src"),
                N = (L.children().length > 0 && M != "slides") ? $("#video-wrapper", L) : "null";
            columnsPrevItemArr[I] = $(this);
            y[I] = (N == "null") ? g(L, M) : N;
            I++;
            $(this).css("width", s);
            $(this).css("display", "none")
        });
        if ($("#columns-slides-controls", this).length > 0) {
            tempSlidesControl = $("#columns-slides-controls", this);
            colSlidesControl = $("#columns-slides-controls", this);
            colSlidesControl.remove()
        }
        $(this).css("width", s);
        J.css("width", J.width())
    });

    function g(L, I) {
        if (I != "slides") {
            return I
        } else {
            var J = new Array();
            var K = 0;
            L.children().each(function () {
                if ($(this).attr("data-src") != undefined) {
                    J[K] = $(this).attr("data-src");
                    K++
                }
            });
            return J
        }
    }
    function r() {
        if (touchDevice == 0) {
            var J = $(".col-prev-media-arrow-backward .col-prev-media-arrow-backg").css("opacity");
            var I = rgb2hex($(".col-prev-media-arrow-backward .col-prev-media-arrow-backg").css("background-color"));
            var K = $(".col-prev-media-arrow-backward, .col-prev-media-arrow-forward");
            K.unbind("mouseenter mouseleave");
            K.hover(function () {
                TweenMax.to($(".col-prev-media-arrow-backg", this), 0.3, {
                    css: {
                        opacity: "1",
                        backgroundColor: themeColor
                    },
                    easing: Sine.easeOut
                })
            }, function () {
                TweenMax.to($(".col-prev-media-arrow-backg", this), 0.3, {
                    css: {
                        opacity: J,
                        backgroundColor: I
                    },
                    easing: Sine.easeOut
                })
            })
        }
        z()
    }
    function i() {
        var J = $(".col-prev-media-arrow-backward");
        var I = $(".col-prev-media-arrow-forward");
        J.unbind("click");
        I.unbind("click")
    }
    function z() {
        var J = $(".col-prev-media-arrow-backward");
        var I = $(".col-prev-media-arrow-forward");
        J.unbind("click");
        J.click(function () {
            i();
            B(-1)
        });
        I.unbind("click");
        I.click(function () {
            i();
            B(1)
        })
    }
    var v = 0;
    var o = 0;
    var l = 0;

    function B(I) {
        o = v;
        v += I;
        if (v < 0) {
            v = l - 1
        }
        if (v >= l) {
            v = 0
        }
        var L = y[columnsPreviewIndex];
        L[o].css("z-index", 1).attr("id", "");
        L[v].css("z-index", 2).css("opacity", "0").attr("id", "col-prev-media-slide-curr");
        var M = L[v];
        var K = L[v].parent();
        var N = K.height();
        var J = M.height();
        var O = 0;
        if (N != J) {
            O = 0.3;
            TweenMax.to(K, 0.3, {
                css: {
                    height: J
                },
                easing: Sine.easeOut
            })
        }
        TweenMax.to(L[v], 0.5, {
            css: {
                opacity: "1"
            },
            delay: O,
            easing: Sine.easeOut,
            onComplete: function () {
                z();
                E()
            }
        })
    }
    function E() {
        var J = 0;
        var K = y[columnsPreviewIndex];
        var I = K.length;
        for (J = 0; J < I; J++) {
            if (J != v) {
                K[J].css("opacity", "0")
            }
        }
    }
    x.css("display", "none");
    var a = 0;
    totalColPreviews = $(".columns-preview-horizontal-fix ul", D).children().length;
    w.unbind("click");
    w.click(function () {
        var I = $(w).index(this);
        columnsPreviewIndex = I;
        if (moduleList != null) {
            moduleList.disableList();
            a = moduleList.currentPosition();
            TweenMax.to($(t_scrBarV2), 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut,
                onComplete: function () {
                    $(t_scrBarV2).css("display", "none")
                }
            })
        }
        if (touchDevice == 1) {
            a = f.scrollTop()
        }
        TweenMax.to(f, 0.4, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut,
            onComplete: function () {
                f.css("display", "none")
            }
        });
        var J = 0;
        for (J; J < totalColPreviews; J++) {
            if (J == columnsPreviewIndex) {
                columnsPrevItemArr[J].css("display", "inline")
            } else {
                columnsPrevItemArr[J].css("display", "none")
            }
        }
        $(".columns-preview-counter span", "#columns-preview-controls").empty().append((I + 1) + "/" + totalColPreviews);
        A(I)
    });

    function A(I) {
        var L = $("#module-columns-preview-holder").width();
        var K = parseInt($("li:first", ".columns-preview-horizontal-fix ul").css("margin-right"), 10);
        var J = I * (L + K);
        if (moduleList != null) {
            moduleList.disableList()
        }
        previewAnimDone = false;
        if (columnsPreviewOpen == false) {
            columnsPreviewOpen = true;
            $(".columns-preview-horizontal-fix ul").css("left", -J);
            x.css("opacity", "0").css("display", "inline");
            TweenMax.to(x, 0.6, {
                css: {
                    opacity: "1"
                },
                delay: 0.3,
                easing: Sine.easeOut
            });
            k(columnsPreviewOpen)
        } else {
            TweenMax.to($("#module-columns-preview", D), 0.3, {
                css: {
                    top: "0px"
                },
                easing: Sine.easeOut
            });
            TweenMax.to($(".columns-preview-horizontal-fix ul"), 0.6, {
                css: {
                    left: -J
                },
                delay: 0.1,
                easing: Sine.easeOut,
                onComplete: k,

                onCompleteParams: [columnsPreviewOpen]
            })
        }
        $(".columns-preview-counter span", "#columns-preview-controls").empty().append((I + 1) + "/" + totalColPreviews)
    }
    function k(L) {
        if (moduleList != null) {
            moduleList.enableList()
        }
        F(true);
        if (moduleList != null) {
            moduleList.destroy(false);
            moduleList = null
        }
        var K = 0;
        for (K; K < totalColPreviews; K++) {
            if (K != columnsPreviewIndex) {
                columnsPrevItemArr[K].css("display", "none")
            }
        }
        moduleUpdate(p, x, $("div:first", x), sideType);
        var M = $(".columns-preview-media", columnsPrevItemArr[columnsPreviewIndex]);
        if ($("img", M).length > 0) {
            audioPlayerPlay();
            u(M)
        }
        if ($("img", M).length <= 0 && $("#video-wrapper", M).length <= 0) {
            audioPlayerPlay();
            var Q = $.isArray(y[columnsPreviewIndex]);
            if (Q == true) {
                o = 0;
                v = 0;
                var T = y[columnsPreviewIndex];
                var S = T.length;
                var I = "";
                M.empty();
                var N = "";
                var O = "";
                l = S;
                while (S--) {
                    if (S == 0) {
                        N = "col-prev-media-slide-curr";
                        O = "animateColPreviewMedia(this)"
                    }
                    I = '<img id="' + N + '" width="100%" class="col-prev-media-slide opacity_0" onload="' + O + '" />';
                    M.prepend(I);
                    var R = $("img", M).first();
                    R.attr("src", T[S]);
                    T[S] = R
                }
                colSlidesControl = tempSlidesControl;
                if (colSlidesControl != "") {
                    colSlidesControl.css("opacity", "0");
                    M.append(colSlidesControl);
                    r()
                }
            } else {
                colSlidesControl = "";
                M.empty().append('<img width="100%" class="opacity_0" onload="animateColPreviewMedia(this)" />');
                $("img", M).attr("src", y[columnsPreviewIndex])
            }
        } else {
            colSlidesControl = "";
            previewAnimDone = true;
            var P = $("#video-wrapper", M);
            if (P.length > 0) {
                audioPlayerPause();
                if (P.attr("data-active-video") == undefined) {
                    insertVideo(P, M, moduleUpdate_page_columns)
                } else {
                    var J = $("iframe", P);
                    if (J.length > 0) {
                        $("iframe", P).attr("src", P.attr("data-url"))
                    } else {
                        insertVideo(P, M, moduleUpdate_page_columns)
                    }
                }
            }
        }
        colPreviewItemDisplay("inline")
    }
    function u(O, L) {
        var K = $.isArray(y[columnsPreviewIndex]);
        if (colSlidesControl != "") {
            TweenMax.to(colSlidesControl, 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            })
        }
        if (K == true) {
            var M = y[columnsPreviewIndex];
            var N = M.length;
            l = N;
            if (L == true) {
                $("#col-prev-media-slide-curr", O).css("z-index", "1");
                M[0].css("z-index", "2");
                TweenMax.to(M[0], 0.2, {
                    css: {
                        opacity: "1"
                    },
                    delay: 0.7,
                    easing: Sine.easeOut
                });
                return
            } else {
                while (N--) {
                    var J = 1,
                        I = 0;
                    if (N == 0) {
                        J = 2;
                        I = 1
                    }
                    M[N].css("z-index", J).css("opacity", I)
                }
            }
            colSlidesControl = tempSlidesControl;
            if (colSlidesControl != "") {
                colSlidesControl.css("opacity", "0");
                O.append(colSlidesControl);
                r();
                TweenMax.to(colSlidesControl, 0.4, {
                    css: {
                        opacity: "1"
                    },
                    easing: Sine.easeOut
                })
            }
        }
        o = 0;
        v = 0
    }
    F(true);

    function F(I) {
        $(".columns-preview-close", D).unbind("click");
        if (I == true) {
            $(".columns-preview-close", D).click(function () {
                h()
            });
            TweenMax.to($(".columns-preview-close", D), 0.4, {
                css: {
                    opacity: "1"
                },
                easing: Sine.easeOut
            })
        } else {
            TweenMax.to($(".columns-preview-close", D), 0.4, {
                css: {
                    opacity: "0.5"
                },
                easing: Sine.easeOut
            })
        }
    }
    function h() {
        columnsPreviewOpen = false;
        TweenMax.to($(t_scrBarV2), 0.3, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        TweenMax.to(x, 0.4, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut,
            onComplete: j
        });
        checkActiveVideo($(".columns-preview-media", columnsPrevItemArr[columnsPreviewIndex]))
    }
    function j() {
        audioPlayerPlay();
        u($(".columns-preview-media", columnsPrevItemArr[columnsPreviewIndex]));
        $("div:first", x).css("height", "");
        x.css("opacity", "0").css("display", "none");
        $(t_scrBarV2).css("display", "none");
        $(".columns-preview-horizontal-fix ul", D).find("li").each(function () {
            $(this).css("display", "none")
        });
        $(".columns-preview-horizontal-fix ul", D).css("left", "0");
        if (moduleList != null) {
            moduleList.resetPosition(0);
            moduleList.disableList();
            moduleList.destroy();
            moduleList = null
        }
        f.css("opacity", "0").css("display", "inline");
        moduleUpdate_page_columns(a);
        TweenMax.to(f, 0.6, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        $("#filter-buttons-holder", D).find(".filter-button").each(function () {
            var J = $(this);
            var I = J.attr("data-filter");
            if (I != undefined && I == "*") {
                J.addClass("selected");
                TweenMax.to(J, 0.3, {
                    css: {
                        color: "#ffffff",
                        backgroundColor: themeColor
                    },
                    ease: Sine.easeOut
                })
            } else {
                if (J.hasClass("selected") == true) {
                    J.removeClass("selected").css("color", "#3f3f3f").css("background-color", "transparent")
                }
            }
        })
    }
    var m = rgb2hex($(".columns-preview-backward .columns-preview-backg").css("background-color"));
    $(".columns-preview-backward, .columns-preview-forward, .columns-preview-close").unbind("mouseenter mouseleave");
    $(".columns-preview-backward, .columns-preview-forward, .columns-preview-close").hover(function () {
        TweenMax.to($(".columns-preview-backg", this), 0.3, {
            css: {
                backgroundColor: themeColor
            },
            easing: Sine.easeOut
        })
    }, function () {
        TweenMax.to($(".columns-preview-backg", this), 0.3, {
            css: {
                backgroundColor: m
            },
            easing: Sine.easeOut
        })
    });
    $(".columns-preview-backward, .columns-preview-forward", D).click(function () {
        var I = columnsPreviewIndex;
        if ($(this).hasClass("columns-preview-backward") == true) {
            I--;
            e(I)
        } else {
            if ($(this).hasClass("columns-preview-forward") == true) {
                I++;
                e(I)
            }
        }
    });
    $(".columns-preview-horizontal-fix ul").wipetouch({
        tapToClick: false,
        preventDefault: false,
        wipeLeft: function (I) {
            var J = columnsPreviewIndex;
            J++;
            e(J)
        },
        wipeRight: function (I) {
            var J = columnsPreviewIndex;
            J--;
            e(J)
        }
    });

    function e(I) {
        u($(".columns-preview-media", columnsPrevItemArr[columnsPreviewIndex]), true);
        if (I < 0) {
            I = 0
        }
        if (I > totalColPreviews - 1) {
            I = totalColPreviews - 1
        }
        if (I == columnsPreviewIndex) {
            return
        }
        F(false);
        if (I != columnsPreviewIndex) {
            checkActiveVideo($(".columns-preview-media", columnsPrevItemArr[columnsPreviewIndex]))
        }
        columnsPreviewIndex = I;
        A(columnsPreviewIndex)
    }
    var q = $("#module-columns-holder", D);
    $originalDataPos = getOriginalPos(q);
    if (touchDevice == 0) {
        $("#filter-buttons-holder .filter-button", D).hover(function () {
            if ($(this).hasClass("selected") == true) {
                return
            }
            TweenMax.to($(this), 0.3, {
                css: {
                    color: "#ffffff",
                    backgroundColor: themeColor
                },
                ease: Sine.easeOut
            })
        }, function () {
            if ($(this).hasClass("selected") == true) {
                return
            }
            TweenMax.to($(this), 0.3, {
                css: {
                    color: "#3f3f3f",
                    backgroundColor: "transparent"
                },
                ease: Sine.easeOut
            })
        })
    }
    $("#filter-buttons-holder .filter-button", D).click(function () {
        if ($(this).hasClass("selected") == true) {
            return
        }
        var I = $(this).attr("data-filter");
        $("#filter-buttons-holder", D).find(".filter-button").each(function () {
            if ($(this).hasClass("selected") == true) {
                $(this).removeClass("selected");
                TweenMax.to($(this), 0.3, {
                    css: {
                        color: "#3f3f3f",
                        backgroundColor: "transparent"
                    },
                    ease: Sine.easeOut
                })
            }
        });
        $(this).addClass("selected");
        if (touchDevice == 1) {
            TweenMax.to($(this), 0.3, {
                css: {
                    color: "#ffffff",
                    backgroundColor: themeColor
                },
                ease: Sine.easeOut
            })
        }
        filterContent(q, I, $originalDataPos, onFilterComplete);
        return false
    })
}
function insertVideo(a, b, c) {
    var d = a;
    if (touchDevice == 1) {
        if (d.children().length > 0) {
            tempVid = $("div:first", d);
            tempVid.attr("data-width", b.width());
            b.empty();
            b.append(tempVid)
        }
    }
    if (c == undefined || c == null) {
        c = function () {}
    }
    d = $("#video-wrapper", b);
    if (d.length > 0) {
        d.empty();
        d.attr("data-active-video", "true");
        TweenMax.to(b, 0.5, {
            css: {
                height: d.attr("data-height") + "px"
            },
            easing: Sine.easeOut,
            onComplete: c
        });
        templateAddMediaVideo(d.attr("data-video-type"), d, undefined)
    }
}
var delayRemove = "";

function checkActiveVideo(a) {
    var c = $("#video-wrapper", a);
    if (c.length > 0) {
        var b = setInterval(function () {
            var d = $("iframe", c);
            if (d.length > 0) {
                $("iframe", c).attr("src", "")
            } else {
                c.empty()
            }
            clearCustomInterval(b)
        }, 40)
    }
}
var containerTotalH = 0;

function onFilterComplete(b, a, h, d) {
    var f = a.children().length - 1;
    if (d == false) {
        containerTotalH = h.position().top + parseInt(h.css("margin-bottom"), 10) + h.height()
    }
    if (b == f) {
        var c = $(txt_modCont);
        var g = $("#module-columns", c);
        var e = $("#module-columns-wrapper", g);
        if (g.length <= 0) {
            return
        }
        a.css("height", containerTotalH);
        TweenMax.to($("div:first", e), 0.3, {
            css: {
                top: "0px"
            },
            easing: Sine.easeOut,
            onComplete: function () {
                var i = $("#template-menu").attr("data-side");
                moduleUpdate(c, e, $("div:first", e), sideType, null, null, 0);
                if (moduleList != null) {
                    moduleList.enableList()
                }
            }
        })
    }
}
function getOriginalPos(a) {
    var b = 0;
    var c = new Array();
    a.children().each(function () {
        c[b] = {
            x: $(this).position().left,
            y: $(this).position().top
        };
        b++
    });
    a.css("height", a.height());
    a.css("width", a.width());
    b = 0;
    a.children().each(function () {
        $(this).css("position", "absolute");
        $(this).css("left", c[b].x);
        $(this).css("top", c[b].y);
        b++
    });
    return c
}
function filterContent(c, b, a, f) {
    var e = 0;
    var d = 0;
    if (e == 0 && moduleList != null) {
        moduleList.disableList()
    }
    c.children().each(function () {
        if ($(this).attr("data-id").indexOf(b) == -1 && b != "*") {
            TweenMax.to($(this), 0.6, {
                css: {
                    opacity: "0",
                    left: a[d].x,
                    top: a[d].y
                },
                easing: Sine.easeOut,
                onComplete: f,
                onCompleteParams: [e, c, $(this), true]
            })
        } else {
            var g = a[d].x;
            var h = a[d].y;
            TweenMax.to($(this), 0.6, {
                css: {
                    opacity: "1",
                    left: g,
                    top: h
                },
                easing: Sine.easeOut,
                onComplete: f,
                onCompleteParams: [e, c, $(this), false]
            });
            d++
        }
        e++
    })
}
function getDirectionCSS(j, g) {
    var i = j.width(),
        b = j.height(),
        f = (g.x - j.offset().left - (i / 2)) * (i > b ? (b / i) : 1),
        d = (g.y - j.offset().top - (b / 2)) * (b > i ? (i / b) : 1),
        e = Math.round((((Math.atan2(d, f) * (180 / Math.PI)) + 180) / 90) + 3) % 4;
    var c, a;
    switch (e) {
    case 0:
        c = {
            instance: "hover-slideFromTop",
            val1: "0px",
            val2: "-100%"
        };
        a = {
            instance: "hover-slideTopLeft",
            val1: "0px",
            val2: "0px"
        };
        break;
    case 1:
        c = {
            instance: "hover-slideFromRight",
            val1: "100%",
            val2: "0px"
        };
        a = {
            instance: "hover-slideTopLeft",
            val1: "0px",
            val2: "0px"
        };
        break;
    case 2:
        c = {
            instance: "hover-slideFromBottom",
            val1: "0px",
            val2: "100%"
        };
        a = {
            instance: "hover-slideTopLeft",
            val1: "0px",
            val2: "0px"
        };
        break;
    case 3:
        c = {
            instance: "hover-slideFromLeft",
            val1: "-100%",
            val2: "0px"
        };
        a = {
            instance: "hover-slideTopLeft",
            val1: "0px",
            val2: "0px"
        };
        break
    }
    return {
        from: c,
        to: a
    }
}
function animateThumb(a) {
    TweenMax.to(a, 0.4, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut
    })
}
var initialColumns = 0;
var maxColumns = 4;

function checkColumnSize(p) {
    var o = $(txt_modCont);
    var y = $("#module-columns", o);
    var e = o.attr("data-id");
    var n = $("#module-columns-holder", y);
    var g = parseInt($("div:first", n).css("margin-right"), 10);
    var i = parseInt($("div:first", n).css("margin-bottom"), 10);
    var c = $("div:first", n).width();
    var x = $("div:first", n).attr("class");
    var l = $("div:first", n).height();
    var t = $("#module-container").width();
    var b = Math.round(t / (c + g));
    if (y.length <= 0) {
        return
    }
    if (x == "fourth-thumb-holder") {
        maxColumns = 4
    }
    if (x == "third-thumb-holder") {
        maxColumns = 3
    }
    if (x == "half-thumb-holder") {
        maxColumns = 2
    }
    var w = (b > 1) ? y.width() : n.width();
    if (b > maxColumns) {
        b = maxColumns
    }
    initialColumns = b;
    var k = $(".columns-preview-media");
    var u = $(".columns-preview-description");
    var s = b * (c + g) - g;
    var m = s + parseInt($("#module-columns-container").css("margin-left"), 10) + parseInt($("#module-columns-container").css("margin-right"), 10);
    if (t < m) {
        if (b > 1) {
            b--
        } else {
            initialColumns--
        }
    } else {
        if (t > m) {
            initialColumns--
        }
    }
    if (p != undefined && p == true) {
        var s = b * (c + g) - g;
        var m = s + parseInt($("#module-columns-container").css("margin-left"), 10) + parseInt($("#module-columns-container").css("margin-right"), 10);
        $("#module-columns-preview-holder", y).css("width", s + "px");
        if (s < 768) {
            k.css("width", s + "px");
            u.css("margin-left", "0px").css("width", "100%")
        } else {
            k.css("width", "");
            u.css("margin-left", "").css("width", "")
        }
        var r = s;
        if (columnsPreviewOpen == false) {
            $("#module-columns-preview", y).css("display", "inline")
        }
        $(y).find(".columns-preview-horizontal-fix").each(function () {
            var B = $("ul", this);
            var C = $("ul li", this);
            $(this).css("width", 9999999);
            C.each(function () {
                $(this).css("width", r)
            });
            var A = B.width();
            C.each(function () {
                if (columnsPreviewOpen == false) {
                    $(this).css("display", "none")
                }
            });
            $(this).css("width", r);
            B.css("width", A)
        });
        var q = $("#module-columns-preview-holder").width();
        var a = parseInt($("li:first", ".columns-preview-horizontal-fix ul").css("margin-right"), 10);
        $(".columns-preview-horizontal-fix ul").css("left", -(columnsPreviewIndex * (q + a)))
    }
    if (initialColumns != b) {
        var d = 0;
        var h = 0;
        var f = 0;
        var j = 0;
        var z = n.children().length;
        n.children().each(function () {
            if (h < b) {
                var A = d * (l + i);
                var B = h * (c + g);
                $(this).css("position", "absolute").css("left", B + "px").css("top", A + "px");
                h++
            } else {
                h = 0;
                d++;
                var A = d * (l + i);
                var B = h * (l + g);
                $(this).css("position", "absolute").css("left", B + "px").css("top", A + "px");
                h++
            }
            $(this).css("opacity", "1");
            if (j == z - 1) {
                f = parseInt($(this).css("top"), 10) + $(this).height()
            }
            j++
        });
        $originalDataPos = getOriginalPos(n);
        var s = b * (c + g) - g;
        var m = s + parseInt($("#module-columns-container").css("margin-left"), 10) + parseInt($("#module-columns-container").css("margin-right"), 10);
        $("#module-columns").css("width", m + "px");
        $("#module-columns-container").css("width", s + "px");
        n.css("height", f + "px");
        n.css("width", s + "px");
        $("#module-columns-preview-holder", y).css("width", s + "px");
        if (s < 768) {
            k.css("width", s + "px");
            u.css("margin-left", "0px").css("width", "100%")
        } else {
            k.css("width", "");
            u.css("margin-left", "").css("width", "")
        }
    }
    var v = $("#module-columns-preview-wrapper", o);
    var r = $("#module-columns-preview-holder", v).width();
    if (columnsPreviewOpen == false) {
        v.css("display", "inline")
    }
    $(v, y).find(".columns-preview-horizontal-fix").each(function () {
        $(this).css("width", 9999999);
        var A = $("ul", this);
        var B = $("ul li", this);
        B.each(function () {
            $(this).css("width", r)
        });
        A.css("width", A.width());
        $(this).css("width", r);
        B.each(function () {
            if (columnsPreviewOpen == false) {
                $(this).css("display", "none")
            }
        })
    });
    if (columnsPreviewOpen == false) {
        v.css("display", "none")
    }
}
function colPreviewItemDisplay(b) {
    var a = 0;
    for (a; a < totalColPreviews; a++) {
        columnsPrevItemArr[a].css("display", b)
    }
}
function animateColPreviewMedia(c) {
    var b = $(c);
    var a = $(c).parent();
    if (touchDevice == 0) {
        TweenMax.to($(c).parent(), 0.3, {
            css: {
                height: b.height()
            },
            easing: Sine.easeOut
        })
    } else {
        a.css("height", b.height())
    }
    previewAnimDone = true;
    if (colSlidesControl != "") {
        TweenMax.to(colSlidesControl, 0.5, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut,
            delay: 0.5
        })
    }
    TweenMax.to(b, 0.5, {
        css: {
            opacity: "1"
        },
        easing: Sine.easeOut,
        delay: 0.1,
        onComplete: moduleUpdate_page_columns
    })
}
var galleryList = null;
var galleryPreviewMediaArr = new Array();
var galleryPreviewDescArr = new Array();
var currGalleryThumbID = 0;
var currPreviewElem = "";
var visibleGalleryH = 0;
var galleryColumns = 0;
var galleryLines = 0;
var galleryVisibleThumbs = 0;
var previewGalleryOpen = false;
var galleryItemArr = new Array();
var galleryTopPos = 0;

function moduleGallery() {
    var p = $(txt_modCont);
    var C = $("#module-galleries", p);
    if (C.length <= 0) {
        return
    }
    var e = p.width();
    var c = p.height();
    var s = $("#module-galleries-holder", C);
    var B = parseInt($(".thumb-holder").css("margin-right"), 10);
    var h = parseInt($(".thumb-holder").css("margin-bottom"), 10);
    var g = $(".thumb-holder").width();
    var f = $(".thumb-holder").height();
    var k = s.width();
    var r = s.height();
    var o = C.height();
    var y = Math.round(k / (g + B));
    var d = Math.floor(o / (f + h) + 1);
    var a = y * d - 1;
    var A = $(window).height() + 50;
    var m = $(window).width();
    visibleGalleryH = o;
    galleryColumns = y;
    galleryLines = d;
    galleryItemArr = [];
    galleryTopPos = 0;
    setPreview();
    storePreviewMedia();
    addControlsListeners();
    if (m < 480 && galleryColumns > 2) {
        galleryColumns = 1
    }
    if (touchDevice == 1 && m <= 320 && galleryColumns == 1) {
        var u = getAvailableScrollbar();
        C.css("width", (g + B + u.width() * 0.5));
        var b = $(txt_modCont);
        var w = Math.round((m - $(":first", b).width()) * 0.5);
        b.css("left", w)
    }
    $(".thumb-holder:nth-child(" + galleryColumns + "n+" + galleryColumns + ")", s).css("margin-right", "0px");
    moduleUpdate(p, C, $("div:first", C), sideType);
    p.css("visibility", "visible");
    var v = $("#module-galleries-holder .thumb-holder", C);
    var D = "#3f3f3f";
    var t = rgb2hex(v.css("background-color"));
    var n = rgb2hex($(".thumb-tag p", v).css("color"));
    if (touchDevice == 0) {
        v.hover(function (i) {
            customHoverAnimation("over", i, $(this), $("#thumb-image-hover", this));
            var E = $(".thumb-tag p", this);
            TweenMax.to(E, 0.6, {
                css: {
                    color: t
                },
                ease: Quad.easeOut
            });
            TweenMax.to($(this), 0.6, {
                css: {
                    backgroundColor: D
                },
                ease: Quad.easeOut
            })
        }, function (i) {
            customHoverAnimation("out", i, $(this), $("#thumb-image-hover", this));
            var E = $(".thumb-tag p", this);
            TweenMax.to(E, 0.6, {
                css: {
                    color: n
                },
                ease: Circ.easeOut
            });
            TweenMax.to($(this), 0.6, {
                css: {
                    backgroundColor: t
                },
                ease: Quad.easeOut
            })
        })
    }
    v.click(function () {
        var i = $(".thumb-holder").index(this);
        currGalleryThumbID = i;
        currPreviewElem = galleryPreviewMediaArr[i];
        setPreviewLoadHTML();
        galleryTopPos = parseInt($("div:first", C).css("top"), 10);
        TweenMax.to(C, 0.6, {
            css: {
                opacity: "0"
            },
            ease: Circ.easeOut,
            onComplete: showGalleryPreview
        });
        if (moduleList != null) {
            moduleList.disableList()
        }
    });
    var x = s.children().length - 1;
    a = (x < a) ? x : a;
    galleryVisibleThumbs = a + 1;
    var z = 0;
    var l = 0;
    var j = 0;
    var q = true;
    s.find(".thumb-holder").each(function () {
        if (z > a) {
            $(this).css("display", "none")
        } else {
            $(this).css("top", A + "px")
        }
        galleryItemArr[z] = $(this);
        z++
    });
    z = 0;
    var l = 0;
    var j = 0;
    var q = true;
    s.find(".thumb-holder").each(function () {
        if (z <= a) {
            l = Math.floor(z / (y));
            j = (z - (l * (y))) * 0.15;
            l = l * 0.1;
            var i = (0.1) + (j) + (l);
            if (z == a) {
                TweenMax.to($(this), 0.6, {
                    css: {
                        top: "0px"
                    },
                    delay: i,
                    ease: Circ.easeOut,
                    onComplete: afterGalleryStartupAnimation,
                    onCompleteParams: [o]
                })
            } else {
                TweenMax.to($(this), 0.6, {
                    css: {
                        top: "0px"
                    },
                    delay: i,
                    ease: Circ.easeOut
                })
            }
        } else {
            return
        }
        z++
    });
    endModuleFunction = endModuleGallery;
    moduleEnd = true;
    return
}
function getAvailableScrollbar() {
    var b = $("#module-container #module-scrollbar-holder");
    var c = $("#module-container #module-scrollbar-holder_v2");
    var a = (b.length > 0) ? b : c;
    return a
}
var moduleEnd = true;

function endModuleGallery(e) {
    var l = $(txt_modCont);
    var x = $("#module-galleries", l);
    var o = $("#module-galleries-holder", x);
    var g = $(".thumb-holder", x);
    var c = g.height() + parseInt(g.css("margin-bottom"), 10);
    var d = parseInt(o.css("top"), 10);
    var v = Math.floor(Math.abs(d / c));
    var n = v * galleryColumns;
    var b = n + galleryVisibleThumbs;
    var s = $(window).height() + 50;
    var a = galleryColumns * galleryLines - 1;
    var p = o.children().length - 1;
    var u = o.height();
    var r = 0;
    var k = galleryItemArr.length;
    if (e == true) {
        a = (p < a) ? p : a;
        while (k--) {
            if (k >= a) {
                galleryItemArr[k].css("display", "none")
            } else {
                galleryItemArr[k].css("top", s + "px")
            }
        }
    } else {
        k = galleryItemArr.length;
        while (k--) {
            if (k < n || k >= b) {
                galleryItemArr[k].css("display", "none")
            }
        }
    }
    if (u > $(window).height()) {
        o.css("top", "0px")
    }
    r = 0;
    var q = 0;
    var h = 0;
    var f = 0;
    var m = true;
    if (e == true) {
        moduleEnd = true;
        o.find(".thumb-holder").each(function () {
            if (r <= a) {
                h = Math.floor(r / (galleryColumns));
                f = (r - (h * (galleryColumns))) * 0.15;
                h = h * 0.1;
                var i = (0.1) + (f) + (h);
                TweenMax.killTweensOf($(this));
                if (r == a) {
                    TweenMax.to($(this), 0.6, {
                        css: {
                            top: "0px"
                        },
                        delay: i,
                        ease: Circ.easeOut,
                        onComplete: showOtherThumbs,
                        onCompleteParams: [o]
                    })
                } else {
                    TweenMax.to($(this), 0.6, {
                        css: {
                            top: "0px"
                        },
                        delay: i,
                        ease: Circ.easeOut
                    })
                }
            } else {
                return
            }
            r++
        })
    } else {
        k = galleryItemArr.length;
        r = 0;
        while (k--) {
            if (k >= n) {
                h = Math.floor(r / (galleryColumns));
                f = (r - (h * (galleryColumns))) * 0.15;
                h = h * 0.1;
                var w = (0.1) + (f) + (h);
                if (k == n && e == true) {
                    TweenMax.to(galleryItemArr[k], 0.8, {
                        css: {
                            top: s + "px"
                        },
                        delay: w,
                        ease: Circ.easeInOut,
                        onComplete: showOtherThumbs,
                        onCompleteParams: [o]
                    })
                } else {
                    TweenMax.to(galleryItemArr[k], 0.8, {
                        css: {
                            top: s + "px"
                        },
                        delay: w,
                        ease: Circ.easeInOut
                    })
                }
                if (m == true && $("#dragger-holder").length > 0) {
                    m = false;
                    TweenMax.to($("#dragger-holder"), 0.8, {
                        css: {
                            top: s + "px"
                        },
                        ease: Circ.easeInOut
                    })
                }
                r++
            }
        }
    }
    if (e == undefined) {
        endModuleFunction = null
    }
}
function showOtherThumbs(a) {
    a.find(".thumb-holder").each(function () {
        $(this).css("display", "inline").css("top", "0px")
    })
}
function afterGalleryStartupAnimation(b) {
    var a = $(txt_modCont);
    var c = $("#module-galleries", a);
    if (c.length <= 0) {
        return
    }
    $("#module-galleries-holder", c).find(".thumb-holder").each(function () {
        $(this).css("display", "inline")
    });
    $("#module-galleries-preview").wipetouch({
        tapToClick: false,
        preventDefault: false,
        wipeLeft: function (d) {
            wipeChange(1)
        },
        wipeRight: function (d) {
            wipeChange(-1)
        }
    })
}
function wipeChange(a) {
    var b = $("#preview-media-holder :first");
    TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
        css: {
            opacity: "1"
        },
        delay: 0.3,
        easing: Sine.easeOut
    });
    TweenMax.to(b, 0.4, {
        css: {
            opacity: "0"
        },
        easing: Sine.easeOut,
        onComplete: function () {
            changePreviewMedia(a)
        }
    })
}
function storePreviewMedia() {
    galleryPreviewMediaArr = new Array();
    galleryPreviewDescArr = new Array();
    var a = 0;
    $("#module-galleries-preview").find("#preview-media-holder").children().each(function () {
        if ($(this).attr("id") == "preview-media-image") {
            galleryPreviewMediaArr[a] = '<img id="preview-media-image" src="' + $(this).attr("data-url") + '" title="' + $(this).attr("data-title") + '" alt="' + $(this).attr("data-alt") + '" />'
        } else {
            if ($(this).attr("id") == "video-wrapper") {
                var e = $(this).attr("data-type");
                galleryPreviewMediaArr[a] = $(this)
            }
        }
        var d = $(":first", this);
        if ($(":first", this).length > 0) {
            galleryPreviewDescArr[a] = d
        } else {
            galleryPreviewDescArr[a] = undefined
        }
        a++
    });
    a = 0;
    var b = galleryPreviewDescArr.length;
    var c = $("#module-galleries-preview-description-holder");
    for (a = 0; a < b; a++) {
        if (c.length > 0 && galleryPreviewDescArr[a] != undefined) {
            c.append(galleryPreviewDescArr[a])
        }
    }
    setPreviewLoadHTML()
}
function isIE9Std() {
    var d;
    try {
        var c = arguments.caller.length;
        d = 0
    } catch (f) {
        d = 1
    }
    return ((document.all && d) == 1)
}
function setPreviewLoadHTML() {
    $("#module-galleries-preview").find("#preview-media-holder").empty()
}
function setPreview() {
    var a = $("#module-galleries-preview");
    if (a.length > 0) {
        a.remove();
        $("#template-wrapper").after(a)
    }
}
function showGalleryPreview() {
    previewGalleryOpen = true;
    var a = $("#module-galleries-preview");
    $("#module-galleries").attr("style", "display: none; visibility: visible;");
    a.css("opacity", "0");
    a.css("display", "inline");
    a.css("visibility", "visible");
    changeGalleryPreviewDescription(-1, currGalleryThumbID);
    TweenMax.to(a, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut,
        onComplete: showGalleryPreviewMedia
    });
    TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
        css: {
            opacity: "1"
        },
        delay: 0.3,
        easing: Sine.easeOut
    })
}
function showGalleryPreviewMedia() {
    if ($(currPreviewElem).attr("id") == "preview-media-image") {
        audioPlayerPlay();
        $("#module-galleries-preview").find("#preview-media-holder").append('<img id="preview-media-load" onload="animatePreviewMedia()" title="" alt="" />');
        var g = $("#preview-media-load");
        g.attr("style", "visibility: visible; display: inline");
        g.css("opacity", "0");
        g.attr("src", $(currPreviewElem).attr("src")).attr("title", $(currPreviewElem).attr("title")).attr("alt", $(currPreviewElem).attr("alt"))
    } else {
        if ($(currPreviewElem).attr("id") == "video-wrapper") {
            audioPlayerPause();
            $("#module-galleries-preview").find("#preview-media-holder").find("#video-wrapper").remove();
            var d = ($("#module-galleries-preview-description-holder").length > 0) ? $("#module-galleries-preview-description-holder").height() : 0;
            if (previewDescriptionActive == false) {
                d = 0
            }
            var c = $("#preview-media-holder");
            var a = parseInt($(currPreviewElem).attr("data-width"), 10) + previewBorderSize * 2;
            var e = parseInt($(currPreviewElem).attr("data-height"), 10) + previewBorderSize * 2;
            var f = -e * 0.5 - d * 0.5;
            var b = -a * 0.5;
            c.attr("style", "width: " + a + "px; height: " + e + "px; margin: 0px; top: 50%; left: 50%; margin-top:" + f + "px; margin-left:" + b + "px;");
            $("#preview-media-holder").append('<div id="video-wrapper"></div>');
            templateAddMediaVideo($(currPreviewElem).attr("data-video-type"), $(currPreviewElem), $("#video-wrapper"));
            TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
                css: {
                    opacity: "0"
                },
                easing: Sine.easeOut
            });
            loadingAnimationDone = true;
            fadeInMedia("")
        }
    }
}
function addControlsListeners() {
    if (touchDevice == 0) {
        var d = $(".module-galleries-preview-arrow-backward .module-galleries-preview-arrow-backg").css("opacity");
        var a = rgb2hex($(".module-galleries-preview-arrow-backward .module-galleries-preview-arrow-backg").css("background-color"));
        var g = $(".module-galleries-preview-arrow-backward, .module-galleries-preview-arrow-forward, .module-galleries-preview-arrow-close");
        g.unbind("mouseenter mouseleave");
        g.hover(function () {
            TweenMax.to($(".module-galleries-preview-arrow-backg", this), 0.3, {
                css: {
                    opacity: "1",
                    backgroundColor: themeColor
                },
                easing: Sine.easeOut
            })
        }, function () {
            TweenMax.to($(".module-galleries-preview-arrow-backg", this), 0.3, {
                css: {
                    opacity: d,
                    backgroundColor: a
                },
                easing: Sine.easeOut
            })
        })
    }
    var e = $(".module-galleries-preview-arrow-backward");
    var c = $(".module-galleries-preview-arrow-forward");
    e.unbind("click");
    e.click(function () {
        TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        changePreviewMedia(-1)
    });
    c.unbind("click");
    c.click(function () {
        TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
            css: {
                opacity: "1"
            },
            easing: Sine.easeOut
        });
        changePreviewMedia(1)
    });
    var f = ".module-galleries-preview-arrow-close";
    var b = "#module-galleries-preview-background";
    $(b).unbind("click");
    $(f).unbind("click");
    $(f + "," + b).click(function () {
        firstDescRun = true;
        if ($(currPreviewElem).attr("id") == "preview-media-image") {
            TweenMax.to($("#preview-media-load"), 0.3, {
                css: {
                    opacity: "0"
                },
                ease: Circ.easeOut
            })
        } else {
            if ($(currPreviewElem).attr("id") == "video-wrapper") {
                setPreviewLoadHTML();
                TweenMax.to($(currPreviewElem), 0.3, {
                    css: {
                        opacity: "0"
                    },
                    ease: Circ.easeOut
                })
            }
        }
        if (previewDescriptionActive == true) {
            TweenMax.to($("#module-galleries-preview-description-holder"), 0.3, {
                css: {
                    bottom: "-60px"
                },
                ease: Circ.easeOut
            })
        }
        TweenMax.to($("#module-galleries-preview"), 0.6, {
            css: {
                opacity: "0"
            },
            ease: Circ.easeOut,
            delay: 0.3,
            onComplete: onClosePreviewComplete
        })
    })
}
var loadingAnimationDone = true;
var previewDescriptionActive = true;

function changePreviewMedia(b) {
    var a = currGalleryThumbID + b;
    if (a > galleryPreviewMediaArr.length - 1) {
        a = 0
    } else {
        if (a < 0) {
            a = galleryPreviewMediaArr.length - 1
        }
    }
    if (currGalleryThumbID != a) {
        if ($(currPreviewElem).attr("id") == "preview-media-image") {
            $("#preview-media-load").css("opacity", 0).css("visibility", "hidden").css("display", "none")
        } else {
            if ($(currPreviewElem).attr("id") == "video-wrapper") {
                $(currPreviewElem).css("opacity", "0").css("visibility", "hidden").css("display", "none")
            }
        }
        changeGalleryPreviewDescription(currGalleryThumbID, a);
        currGalleryThumbID = a;
        currPreviewElem = galleryPreviewMediaArr[currGalleryThumbID];
        setPreviewLoadHTML();
        showGalleryPreviewMedia()
    }
}
function changeGalleryPreviewDescription(b, a) {
    if (b != -1) {
        var d = galleryPreviewDescArr[b];
        if (d != undefined) {
            TweenMax.to($(d), 0.4, {
                css: {
                    opacity: "0"
                },
                ease: Circ.easeOut,
                onComplete: hidePrevDescText,
                onCompleteParams: [b]
            })
        }
    }
    if (a != -1) {
        var c = galleryPreviewDescArr[a];
        if (c == undefined) {
            previewDescriptionActive = false;
            firstDescRun = true;
            TweenMax.to($("#module-galleries-preview-description-holder"), 0.4, {
                css: {
                    bottom: "-60px"
                },
                ease: Circ.easeOut
            });
            return
        } else {
            previewDescriptionActive = true
        }
        $(c).css("opacity", "0").css("visibility", "visible").css("display", "inline");
        TweenMax.to($(c), 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    }
}
function hidePrevDescText(a) {
    var b = galleryPreviewDescArr[a];
    $(b).css("opacity", "0").css("visibility", "hidden").css("display", "none")
}
function updatePreviewMediaPosition() {
    var d = $(window).width() - previewBorderSize * 2;
    var a = $(window).height() - 36;
    var b = "";
    var i = $(currPreviewElem).attr("id");
    if (i == "preview-media-image") {
        b = $("#preview-media-load");
        b.css("width", "").css("height", "");
        checkSizeMedia($(b), d, a)
    }
    if ($(b).width() != null) {
        var h = $(b).width() + previewBorderSize * 2;
        var e = $(b).height() + previewBorderSize * 2;
        var c = -e * 0.5 - 18;
        var g = -h * 0.5;
        var f = $("#preview-media-holder");
        f.attr("style", "width: " + $(b).width() + "px; height: " + $(b).height() + "px; margin: 0px; top: 50%; left: 50%; margin-top:" + c + "px; margin-left:" + g + "px;")
    }
}
function onClosePreviewComplete() {
    audioPlayerPlay();
    setPreviewLoadHTML();
    var a = $("#preview-media-load");
    var e = $("#module-galleries-preview");
    var g = $("#module-galleries");
    if ($(currPreviewElem).attr("id") == "preview-media-image") {
        a.css("opacity", 0).css("visibility", "hidden").css("display", "none")
    }
    if ($(currPreviewElem).attr("id") == "preview-media-video") {
        a.css("opacity", 0)
    }
    e.css("opacity", "0").css("display", "none").css("visibility", "hidden");
    g.css("opacity", "0").css("display", "inline").css("visibility", "visible");
    previewGalleryOpen = false;
    changeGalleryPreviewDescription(currGalleryThumbID, -1);
    var f = $(txt_modCont);
    var i = $("#module-galleries", f);
    if (moduleList != null) {
        moduleList.enableList();
        moduleList.updateCurrPos(galleryTopPos)
    }
    var d = parseInt($(".thumb-holder").css("margin-right"), 10);
    var j = $(".thumb-holder").width();
    var b = $(window).width();
    if (touchDevice == 1 && b <= 320 && galleryColumns == 1) {
        var c = getAvailableScrollbar();
        i.css("width", (j + d + c.width() * 0.5));
        var k = $(txt_modCont);
        var h = Math.round((b - $(":first", k).width()) * 0.5);
        k.css("left", h)
    }
    moduleUpdate(f, i, $("div:first", i), sideType, true, false);
    TweenMax.to(i, 0.6, {
        css: {
            opacity: "1"
        },
        ease: Circ.easeOut
    })
}
function animatePreviewMedia() {
    var j = ($("#module-galleries-preview-description-holder").length > 0) ? $("#module-galleries-preview-description-holder").height() : 0;
    if (previewDescriptionActive == false) {
        j = 0
    }
    var d = $(window).width() - previewBorderSize * 2;
    var a = $(window).height() - j;
    var b = "";
    var i = $(currPreviewElem).attr("id");
    if (i == "preview-media-image") {
        b = $("#preview-media-load");
        checkSizeMedia($(b), d, a)
    }
    if ($(b).width() != null) {
        var h = $(b).width() + previewBorderSize * 2;
        var e = $(b).height() + previewBorderSize * 2;
        var c = -e * 0.5 - j * 0.5;
        var g = -h * 0.5;
        var f = $("#preview-media-holder");
        f.attr("style", "width: " + $(b).width() + "px; height: " + $(b).height() + "px; margin: 0px; top: 50%; left: 50%; margin-top:" + c + "px; margin-left:" + g + "px;");
        TweenMax.to($(".gallery-preview-media-loader"), 0.3, {
            css: {
                opacity: "0"
            },
            easing: Sine.easeOut
        });
        loadingAnimationDone = true;
        fadeInMedia(i)
    }
}
var firstDescRun = true;

function fadeInMedia(a) {
    if (a == "preview-media-image") {
        TweenMax.to($("#preview-media-load"), 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    }
    if (firstDescRun == true && previewDescriptionActive == true) {
        firstDescRun = false;
        TweenMax.to($("#module-galleries-preview-description-holder"), 0.6, {
            css: {
                bottom: "0px"
            },
            delay: 0.5,
            ease: Circ.easeOut
        })
    }
}
function checkSizeMedia(f, b, c) {
    var d = f.width();
    var i = f.height();
    var g = 1;
    var e;
    var a;
    if (d > b && i > c) {
        e = b;
        a = i / d * e;
        if (a > c) {
            e = d / i * c;
            a = c
        }
    } else {
        if (d > b && i < c) {
            e = b;
            a = i / d * e
        } else {
            if (d < b && i > c) {
                a = c;
                e = a / i * d
            } else {
                if (d < b && i < c) {
                    e = d;
                    a = i
                }
            }
        }
    }
    f.width(e);
    f.height(a)
}
function gallerySizeMedia(f, b, c) {
    var d = f.width();
    var i = f.height();
    var g = 1;
    if (d / i > b / c) {
        g = c / i
    } else {
        g = b / d
    }
    var e = d * g;
    var a = i * g;
    f.width(e);
    f.height(a)
}
var playSign, pauseSign, volOnSign, volOffSign, isPlaying = false,
    initializePlayer = false,
    myPlaylist, firstPlay = true;

function setupAudio() {
    var a = $("#audio-player");
    var o = $("#audio-items");
    if (touchDevice == 1) {
        a.remove();
        return
    }
    if (o.length <= 0 || o.children().length <= 0) {
        if (a.length > 0) {
            a.remove()
        }
        return
    }
    audioAutoPlay = (a.attr("data-auto-play") != undefined && a.attr("data-auto-play") == "true") ? true : false;
    audioPlayerOpened = (a.attr("data-player-opened") != undefined && a.attr("data-player-opened") == "true") ? true : false;
    volumeValue = (a.attr("data-player-volume") != undefined) ? Number(a.attr("data-player-volume")) : 0.5;
    tempVolume = volumeValue;
    audioPlayerInst = $("#audio-items");
    a.css("width", $(".template-menu").width());
    var n = $("#audio-options-button");
    var s = a.width();
    var j = s - n.width();
    var C = $("#audio-player-holder");
    var h = audioPlayerOpened;
    var m = $(".audio-player-tooltip-title", "#audio-tooltip-holder");
    var t, f, w, x, r, e, q, k, A, c;
    c = $("#audio-player-tooltip", "#audio-player");
    t = $("#audio-prev-track", "#audio-player-holder");
    f = $("#audio-play-pause-track", "#audio-player-holder");
    x = $("#audio-next-track", "#audio-player-holder");
    r = $("#audio-volume-speaker", "#audio-player-holder");
    e = $("#audio-volume-bar");
    q = $(".audio-volume-bar-scrub-current", e);
    A = $(".audio-volume-bar-scrub-backg", e).width();
    q.css("width", volumeValue * A);
    k = q.width();
    if (audioPlayerOpened == true) {
        C.css("left", "0px");
        D()
    } else {
        C.css("left", j);
        v()
    }
    n.click(function () {
        if (h == false) {
            h = true;
            TweenMax.to(C, 0.4, {
                css: {
                    left: "0px"
                },
                ease: Sine.easeOut,
                onComplete: function () {
                    D()
                }
            })
        } else {
            h = false;
            v();
            TweenMax.to(C, 0.4, {
                css: {
                    left: j + "px"
                },
                ease: Sine.easeOut
            })
        }
    });
    var u = new Array();
    var y = new Array();
    var d = 0;
    var l = 0;
    o.find("#audio-track").each(function () {
        u[l] = {
            title: $(this).attr("data-title"),
            mp3: $(this).attr("data-src") + ".mp3",
            oga: $(this).attr("data-src") + ".ogg",
            wav: $(this).attr("data-src") + ".wav"
        };
        l++
    });
    var i = "";

    function B(G) {
        if (i == G) {
            return
        }
        i = G;
        var F = $("span", m);
        F.css("width", "");
        F.empty().append(G);
        if (F.width() <= m.width()) {
            F.css("width", "100%")
        }
    }
    o.empty();

    function p() {
        myPlaylist = new jPlayerPlaylist({
            jPlayer: "#audio-items"
        }, u, {
            playlistOptions: {
                loopOnPrevious: true,
                enableRemoveControls: false
            },
            volume: volumeValue,
            loop: true,
            muted: false,
            swfPath: "js/audio-js/",
            supplied: "oga, mp3, wav",
            wmode: "window"
        });
        o.bind($.jPlayer.event.play, function (F) {
            B(F.jPlayer.status.media.title)
        })
    }
    function z(G) {
        var F = d + G;
        if (F > l - 1) {
            F = 0
        }
        if (F < 0) {
            F = l - 1
        }
        d = F;
        myPlaylist.play(d)
    }
    playSign = $(".audio-play-track-sign", f), pauseSign = $(".audio-pause-track-sign", f), volOnSign = $(".audio-volume-on-sign", r), volOffSign = $(".audio-volume-off-sign", r);
    if (audioAutoPlay == false) {
        playSign.css("opacity", "1");
        pauseSign.css("opacity", "0");
        B(u[d].title)
    } else {
        isPlaying = true;
        isAudioPlaying = true;
        if (initializePlayer == false) {
            initializePlayer = true;
            p();
            firstPlay = false
        }
        myPlaylist.play(d);
        B(u[d].title);
        playSign.css("opacity", "0");
        pauseSign.css("opacity", "1")
    }
    if (audioMuteOn == false) {
        if (initializePlayer == true) {
            myPlaylist.option("muted", false)
        }
        volOnSign.css("opacity", "1");
        volOffSign.css("opacity", "0")
    } else {
        if (initializePlayer == true) {
            myPlaylist.option("muted", true)
        }
        volOnSign.css("opacity", "0");
        volOffSign.css("opacity", "1")
    }
    function D() {
        g(t);
        g(f);
        g(x);
        g(r)
    }
    function v() {
        t.unbind("mouseenter mouseleave");
        f.unbind("mouseenter mouseleave");
        x.unbind("mouseenter mouseleave");
        r.unbind("mouseenter mouseleave")
    }
    function g(H) {
        var G = $(".audio-controls-backg", H);
        var F = rgb2hex(G.css("background-color"));
        H.hover(function () {
            E(true);
            TweenMax.to(G, 0.3, {
                css: {
                    backgroundColor: themeColor
                },
                ease: Sine.easeOut
            })
        }, function () {
            E(false);
            TweenMax.to(G, 0.3, {
                css: {
                    backgroundColor: F
                },
                ease: Sine.easeOut
            })
        })
    }
    function E(F) {
        if (c.length <= 0) {
            return
        }
        if (F == true) {
            c.css("display", "inline");
            TweenMax.killTweensOf(c);
            TweenMax.to(c, 0.4, {
                css: {
                    opacity: "1"
                },
                ease: Sine.easeOut
            })
        } else {
            TweenMax.to(c, 0.4, {
                css: {
                    opacity: "0"
                },
                ease: Sine.easeOut,
                onComplete: function () {
                    c.css("opacity", "0").css("display", "none")
                }
            })
        }
    }
    function b() {
        if (initializePlayer == false) {
            initializePlayer = true;
            p()
        }
    }
    t.click(function () {
        b();
        isPlaying = true;
        isAudioPlaying = true;
        playSign.css("opacity", "0");
        pauseSign.css("opacity", "1");
        myPlaylist.previous()
    });
    x.click(function () {
        b();
        isPlaying = true;
        isAudioPlaying = true;
        playSign.css("opacity", "0");
        pauseSign.css("opacity", "1");
        myPlaylist.next()
    });
    f.click(function () {
        b();
        if (isPlaying == true) {
            isPlaying = false;
            isAudioPlaying = false;
            myPlaylist.pause();
            playSign.css("opacity", "1");
            pauseSign.css("opacity", "0")
        } else {
            isPlaying = true;
            isAudioPlaying = true;
            if (firstPlay == false) {
                o.jPlayer("option", "volume", tempVolume);
                myPlaylist.play()
            } else {
                firstPlay = true;
                myPlaylist.play(d)
            }
            playSign.css("opacity", "0");
            pauseSign.css("opacity", "1")
        }
    });
    e.click(function (F) {
        if (initializePlayer == false) {
            return
        }
        k = F.pageX - $(this).offset().left;
        k = Math.round((k / A) * 10) * 0.1;
        o.jPlayer("option", "volume", k);
        if (audioMuteOn == true && k > 0) {
            audioMuteOn = false;
            o.jPlayer("option", "muted", audioMuteOn);
            tempVolume = audioMuteOn;
            volOnSign.css("opacity", "1");
            volOffSign.css("opacity", "0")
        }
        k = A * k;
        if (k > A) {
            k = A
        }
        TweenMax.to(q, 0.2, {
            css: {
                width: k
            },
            ease: Sine.easeOut
        })
    });
    r.click(function () {
        if (initializePlayer == false) {
            return
        }
        if (audioMuteOn == true) {
            audioMuteOn = false;
            TweenMax.to(q, 0.3, {
                css: {
                    width: k
                },
                ease: Sine.easeOut
            });
            volOnSign.css("opacity", "1");
            volOffSign.css("opacity", "0")
        } else {
            audioMuteOn = true;
            TweenMax.to(q, 0.3, {
                css: {
                    width: "0px"
                },
                ease: Sine.easeOut
            });
            volOnSign.css("opacity", "0");
            volOffSign.css("opacity", "1")
        }
        o.jPlayer("option", "muted", audioMuteOn)
    })
}
var audioPlayerInst;
var isAudioPlaying = false;

function audioPlayerPlay() {
    if (initializePlayer == false) {
        return
    }
    if (audioPlayerInst == undefined) {
        return
    }
    if (audioPlayerInst.length > 0 && isAudioPlaying == true && isPlaying == false) {
        var a = tempVolume;
        audioPlayerInst.jPlayer("option", "volume", "0");
        isPlaying = true;
        isAudioPlaying = true;
        playSign.css("opacity", "0");
        pauseSign.css("opacity", "1");
        var b = setTimeout(function () {
            audioPlayerInst.jPlayer("play")
        }, 100);
        var c = setInterval(function () {
            audioPlayerInst.jPlayer("option", "volume", a);
            clearInterval(c)
        }, 600)
    }
}
var tempVolume = 0;

function audioPlayerPause() {
    if (initializePlayer == false) {
        return
    }
    if (audioPlayerInst == undefined) {
        return
    }
    if (audioPlayerInst.length > 0) {
        tempVolume = audioPlayerInst.jPlayer("option", "volume");
        audioPlayerInst.jPlayer("option", "volume", "0");
        isPlaying = false;
        playSign.css("opacity", "1");
        pauseSign.css("opacity", "0");
        var a = setTimeout(function () {
            if (isPlaying == true) {
                myPlaylist.pause()
            }
        }, 100)
    }
}
function footerListeners() {
    $("#footer-social").find("#footer-social-holder").find("a").each(function () {
        var a = $("img", this).attr("title");
        $(this).hover(function () {
            $("#footer-social-tooltip").css("opacity", "0");
            $("#footer-social-tooltip").css("display", "inline");
            $("#footer-social-tooltip").css("visibility", "visible");
            $("#footer-social-tooltip").empty();
            $("#footer-social-tooltip").append("<span>" + a + "</span>");
            TweenMax.to($("#footer-social-tooltip"), 0.6, {
                css: {
                    opacity: "1"
                },
                ease: Circ.easeOut
            })
        }, function () {
            $("#footer-social-tooltip").css("opacity", "0");
            $("#footer-social-tooltip").css("display", "none");
            $("#footer-social-tooltip").css("visibility", "hidden");
            $("#footer-social-tooltip").empty()
        })
    })
}
var currModuleType = "";
var prevModuleType = "";
var sideType = "none";
var prevURL = "";
var loadURL = "";
var menuOptionsArr = new Array();
var menuOptionID = 0;
var submenuOptionID = -1;

function storeMenuArr() {
    var a = $(".template-menu").width() + $("#menu-hider").width();
    $("#template-menu").children().each(function (e, f) {
        var g = $(f),
            b = "null",
            h = "null",
            d = $(".menu-option-text a", g);
        menuOptionsArr[e] = [];
        menuOptionsArr[e][0] = g;
        if (g.attr("data-module-type") == undefined) {
            var c = [];
            h = g.find(".sub-menu-holder");
            h.children().each(function (k, n) {
                var m = $(n),
                    i = $(".sub-menu-option-text a", this),
                    l = String(i.attr("href")),
                    j = i.attr("data-path-href");
                c[k] = [];
                c[k][0] = "#" + d.text().toLowerCase() + "/" + l.replace("#", "");
                c[k][1] = [m.attr("data-module-type"), m.attr("data-side"), l.replace("#", ""), j];
                c[k][2] = $(".sub-menu-option-background", this);
                c[k][3] = i
            });
            b = c;
            menuOptionsArr[e][1] = "null"
        } else {
            menuOptionsArr[e][1] = [g.attr("data-module-type"), g.attr("data-side"), String(d.attr("href")).replace("#", ""), d.attr("data-path-href")]
        }
        menuOptionsArr[e][2] = $(".menu-option-background", g);
        menuOptionsArr[e][3] = (b == "null") ? [d] : [d, $(".menu-option-text div", g)];
        menuOptionsArr[e][4] = a - parseInt(d.css("padding-left"), 10);
        menuOptionsArr[e][5] = h;
        menuOptionsArr[e][6] = b;
        if (touchDevice == 0) {
            g.bind("mouseenter mouseleave", {
                idx: e
            }, menuOptionHover)
        }
    })
}
function menuOptionIn(c, b) {
    menuOptionsArr[c][2].attr("class", "menu-option-background-selected");
    TweenMax.to(menuOptionsArr[c][2], menuAnimDuration, {
        css: {
            marginLeft: "0px",
            width: menuWidth
        },
        ease: menuAnimEase
    });
    TweenMax.to(menuOptionsArr[c][3], menuAnimDuration, {
        css: {
            color: "#FFF"
        },
        ease: menuAnimEase
    });
    if (b != -1) {
        var a = menuOptionsArr[c][6];
        a[b][2].attr("class", "sub-menu-option-background-selected");
        TweenMax.to(a[b][2], menuAnimDuration, {
            css: {
                marginLeft: "0px",
                width: menuWidth
            },
            ease: menuAnimEase
        });
        TweenMax.to(a[b][3], menuAnimDuration, {
            css: {
                color: "#FFF"
            },
            ease: menuAnimEase
        })
    }
}
function menuOptionOut(d, c, b) {
    if (b == undefined) {
        menuOptionsArr[d][2].attr("class", "menu-option-background");
        TweenMax.to(menuOptionsArr[d][2], menuAnimDuration, {
            css: {
                marginLeft: menuWidth,
                width: "0px"
            },
            ease: menuAnimEase
        });
        TweenMax.to(menuOptionsArr[d][3], menuAnimDuration, {
            css: {
                color: menuTextOutColor
            },
            ease: menuAnimEase
        })
    }
    if (c != -1) {
        var a = menuOptionsArr[d][6];
        a[c][2].attr("class", "sub-menu-option-background");
        TweenMax.to(a[c][2], menuAnimDuration, {
            css: {
                marginLeft: menuWidth,
                width: "0px"
            },
            ease: menuAnimEase
        });
        TweenMax.to(a[c][3], menuAnimDuration, {
            css: {
                color: menuTextOutColor
            },
            ease: menuAnimEase
        })
    }
}
function setMenuData(a) {
    oldMenuData = a;
    currModuleType = a[0];
    sideType = a[1];
    url = a[2];
    $("#template-menu").attr("data-current-module-type", a[0]);
    $("#template-menu").attr("data-side", a[1]);
    $("#template-menu").attr("data-href", a[2]);
    endPreviousModule = false
}
function menuOptionHover(c) {
    var a = c.data.idx,
        e = menuOptionsArr[a][5];
    if (c.type == "mouseenter") {
        menuOptionsArr[a][3][0].css("width", menuOptionsArr[a][4]);
        TweenMax.to(menuOptionsArr[a][2], menuAnimDuration, {
            css: {
                marginLeft: "0px",
                width: menuWidth
            },
            ease: menuAnimEase
        });
        TweenMax.to(menuOptionsArr[a][3], menuAnimDuration, {
            css: {
                color: "#FFF"
            },
            ease: menuAnimEase
        });
        if (e != "null") {
            e.css("height", "").css("width", "");
            var b = e.css("height"),
                d = e.css("width");
            e.css("width", "0px").css("height", "0px");
            TweenMax.to(e, menuAnimDuration, {
                css: {
                    height: b,
                    width: d
                },
                delay: 0.2,
                ease: menuAnimEase,
                onStart: function () {
                    e.css("opacity", "1").css("display", "block")
                }
            })
        }
    } else {
        menuOptionsArr[a][3][0].css("width", "");
        if (menuOptionsArr[a][2].hasClass("menu-option-background-selected") == false) {
            TweenMax.to(menuOptionsArr[a][2], menuAnimDuration, {
                css: {
                    marginLeft: menuWidth,
                    width: "0px"
                },
                ease: menuAnimEase
            });
            TweenMax.to(menuOptionsArr[a][3], menuAnimDuration, {
                css: {
                    color: menuTextOutColor
                },
                ease: menuAnimEase
            })
        }
        if (e != "null") {
            e.css("overflow", "");
            TweenMax.killTweensOf(e);
            TweenMax.to(e, menuAnimDuration, {
                css: {
                    height: "0px",
                    width: "0px"
                },
                ease: menuAnimEase,
                onComplete: hideSubmenu,
                onCompleteParams: [e]
            })
        }
    }
}
function hideSubmenu(a) {
    a.css("opacity", "0").css("display", "none")
}
var menuAnimEase = Quad.easeOut;
var menuAnimDuration = 0.4;
var menuWidth = 0;
var submenuWidth = 0;
var oldMenuData = "";
var menuData = "";

function menuListeners() {
    menuWidth = $(".template-menu").width() + "px";
    submenuWidth = $(".template-menu").width() + 2 + "px";

    function b(c) {
        c.css("opacity", "0").css("display", "none")
    }
    var a = "sub-menu-option-background-selected";
    if (touchDevice == 0) {
        $(".sub-menu-option-holder").hover(function () {
            var c = $(".sub-menu-option-background", this);
            var d = c.length == 1 ? c : $("." + a, this);
            TweenMax.to(d, menuAnimDuration, {
                css: {
                    marginLeft: "0px",
                    width: submenuWidth
                },
                ease: menuAnimEase
            });
            TweenMax.to($(".sub-menu-option-text a", this), menuAnimDuration, {
                css: {
                    color: "#FFF"
                },
                ease: menuAnimEase
            })
        }, function () {
            if ($("div:first", this).hasClass(a) == false) {
                var c = $(".sub-menu-option-background", this);
                var d = c.length == 1 ? c : $("." + a, this);
                TweenMax.to(d, menuAnimDuration, {
                    css: {
                        marginLeft: submenuWidth,
                        width: "0px"
                    },
                    ease: menuAnimEase
                });
                TweenMax.to($(".sub-menu-option-text a", this), menuAnimDuration, {
                    css: {
                        color: menuTextOutColor
                    },
                    ease: menuAnimEase
                })
            }
        })
    }
    $(".menu-option-holder").click(function (e) {
        e.preventDefault();
        var c = $(".menu-option-holder").index(this);
        if (menuOptionsArr[c][1][0] == "external") {
            window.open(menuOptionsArr[c][1][2]);
            return
        }
        if (touchDevice == 1) {
            if (menuOptionsArr[c][6] != "null") {
                if (touchMenuID != -1 && touchMenuID != c) {
                    menuOptionHover({
                        data: {
                            idx: touchMenuID
                        },
                        type: "mouseleave"
                    })
                }
                menuOptionHover({
                    data: {
                        idx: c
                    },
                    type: "mouseenter"
                });
                touchMenuID = c;
                if (touchRemoveOn == false) {
                    touchRemoveOn = true;
                    var f = document.getElementById("module-container");
                    f.addEventListener("touchstart", touchContainer, false)
                }
            } else {
                if (touchMenuID != -1 && touchMenuID != c) {
                    menuOptionHover({
                        data: {
                            idx: touchMenuID
                        },
                        type: "mouseleave"
                    });
                    touchMenuID = -1
                }
            }
        }
        if (menuOptionID != c && $(this).attr("data-module-type") != undefined && $(this).attr("data-module-type") != "#") {
            if (loadedContent == false) {
                return
            }
            menuOptionsArr[c][2].attr("class", "menu-option-background-selected");
            menuOptionOut(menuOptionID, submenuOptionID);
            menuOptionID = c;
            submenuOptionID = -1;
            if (touchDevice == 1) {
                menuOptionIn(menuOptionID, submenuOptionID)
            }
            var d = "#" + menuOptionsArr[c][1][2];
            menuData = menuOptionsArr[c][1];
            $(window).unbind("hashchange", onTemplateHashChange);
            window.location.hash = d;
            clearCustomInterval(delayInterval);
            delayInterval = setInterval(function () {
                menuOptionClicked(menuData[2], menuData[0], menuData[1], menuData[3]);
                clearCustomInterval(delayInterval);
                $(window).bind("hashchange", onTemplateHashChange)
            }, 400)
        }
    });
    subCloseInterval = "";
    $(".sub-menu-holder .sub-menu-option-holder").click(function (i) {
        i.preventDefault();
        var f = $(this).parent().get(0);
        var g = $(f).parent().get(0);
        currMenuOptionID = $(g).index();
        var c = $(this).index();
        var e = menuOptionsArr[currMenuOptionID][6];
        if (e[c][1][0] == "external") {
            window.open(e[c][1][2]);
            return
        }
        if (submenuOptionID == c && menuOptionID == currMenuOptionID) {
            return false
        } else {
            if (loadedContent == false) {
                return
            }
            var e = menuOptionsArr[currMenuOptionID][6];
            menuOptionsArr[currMenuOptionID][2].attr("class", "menu-option-background-selected");
            e[c][2].attr("class", "sub-menu-option-background-selected");
            if (touchDevice == 1) {
                menuOptionIn(currMenuOptionID, c);
                clearCustomInterval(subCloseInterval);
                subCloseInterval = setInterval(function () {
                    touchContainer();
                    clearCustomInterval(subCloseInterval)
                }, 200)
            }
            var d = undefined;
            if (menuOptionID == currMenuOptionID) {
                d = true
            }
            menuOptionOut(menuOptionID, submenuOptionID, d);
            menuOptionID = currMenuOptionID;
            submenuOptionID = c;
            var h = e[c][0];
            menuData = e[c][1];
            $(window).unbind("hashchange", onTemplateHashChange);
            window.location.hash = h;
            clearCustomInterval(delayInterval);
            delayInterval = setInterval(function () {
                menuOptionClicked(menuData[2], menuData[0], menuData[1], menuData[3]);
                clearCustomInterval(delayInterval);
                $(window).bind("hashchange", onTemplateHashChange)
            }, 400)
        }
        i.stopPropagation()
    })
}
var touchRemoveOn = false;
var touchMenuID = -1;

function touchContainer() {
    touchRemoveOn = false;
    if (touchMenuID != -1 && menuOptionsArr[touchMenuID][6] != "null") {
        var a = {
            data: {
                idx: touchMenuID
            },
            type: "mouseleave"
        };
        menuOptionHover(a)
    }
    var b = document.getElementById("module-container");
    b.removeEventListener("touchstart", touchContainer, false)
}
function urlChanged() {
    loadedContent = true;
    menuOptionClicked(menuData[2], menuData[0], menuData[1], menuData[3])
}
function isOtherURL() {
    var a = (menuData != "" && menuData[2] != prevURL) ? true : false;
    return a
}
function menuOptionClicked(f, d, g, e) {
    if (f != "#") {
        var b = "";
        if ($("#template-menu").attr("data-current-module-type") == "slideshow") {
            deleteSlideshowTimer()
        }
        if ($("#template-menu").attr("data-current-module-type") == "home2") {
            deleteBannerTimer()
        }
        currModuleType = d;
        sideType = g;
        e = (e == undefined) ? "" : e;
        setMobileMenuOption(f);
        b = templateBaseURL + e + f.replace("#", "");
        if (prevURL == "") {
            prevURL = b
        } else {
            prevURL = loadURL
        }
        loadURL = b;
        stopCurrentLoading();
        if (endModuleFunction != null) {
            delayAnimationLoading = 0.3;
            if (moduleEnd == true) {
                moduleEnd = false;
                endModuleFunction()
            }
        } else {
            delayAnimationLoading = 0.1
        }
        if (menuData[2] != oldMenuData[2]) {
            stopAnimBack(false);
            loadedContent = true;
            activateAnimationLoading()
        } else {
            loadedContent = true;
            var a = $("#loading-animation");
            if (a.length > 0) {
                TweenMax.to(a, 0.3, {
                    css: {
                        right: "-104px"
                    },
                    ease: Circ.easeOut
                })
            }
            if (endModuleFunction == null) {
                switch (menuData[0]) {
                case "news":
                    var c = $(txt_modCont);
                    TweenMax.to(c, 0.6, {
                        css: {
                            left: "0px"
                        },
                        delay: 0.1,
                        ease: Circ.easeInOut
                    });
                    endModuleFunction = endModuleTextPage;
                    moduleEnd = true;
                    startOn = true;
                    startAnimBack();
                    break;
                case "text_page":
                    moduleTextPage();
                    startOn = true;
                    startAnimBack();
                    break;
                case "gallery":
                    endModuleGallery(true);
                    endModuleFunction = endModuleGallery;
                    startOn = true;
                    startAnimBack();
                    break;
                case "showreel":
                    reverseEndModuleShowreel();
                    startOn = true;
                    startAnimBack();
                    break
                }
            }
        }
    }
}
function stopCurrentLoading() {
    if (loadInterval != "") {
        clearInterval(loadInterval);
        loadInterval = ""
    }
    if (showModuleInterval != "") {
        clearInterval(showModuleInterval);
        showModuleInterval = ""
    }
}
var delayAnimationLoading = 0.3;

function activateAnimationLoading() {
    var a = $("#loading-animation");
    TweenMax.killTweensOf(a);
    a.css("right", "-104px").css("display", "inline").css("visibility", "visible");
    if (a.length > 0) {
        TweenMax.to(a, 0.3, {
            css: {
                right: "0px"
            },
            delay: delayAnimationLoading,
            ease: Circ.easeOut,
            onComplete: doLoad
        })
    } else {
        doLoad()
    }
}
var loadInterval = "";

function doLoad() {
    if (loadedContent == true) {
        var c = loadURL;
        clearCustomInterval(loadInterval);
        var b = $("#module-galleries-preview");
        var a = $("#full-width-preview");
        if (b.length > 0) {
            b.remove()
        }
        if (a.length > 0) {
            a.remove()
        }
        loadedContent = false;
        loadInterval = setInterval(function () {
            loadModule(c);
            clearCustomInterval(loadInterval)
        }, 50)
    }
}
var loadedContent = true;

function loadModule(a) {
    loadedContent = false;
    backLoaded = false;
    showDone = false;
    var b = $("#load-container");
    if (b.length > 0) {
        prevURL = a;
        b.empty().load(a + " #module-container > *", moduleLoaded)
    }
}
var showModuleInterval = "";
var cc = 0;

function moduleLoaded(b, a, c) {
    switch (a) {
    case "error":
        console.log("Error loading the page: " + b);
        break;
    case "success":
        if (prevURL != loadURL) {
            clearCustomInterval(showModuleInterval)
        } else {
            clearCustomInterval(showModuleInterval);
            showModuleInterval = setInterval(function () {
                if (menuData[2] == oldMenuData[2]) {
                    clearCustomInterval(showModuleInterval);
                    loadedContent = true;
                    var d = $("#loading-animation");
                    if (d.length > 0) {
                        TweenMax.to(d, 0.3, {
                            css: {
                                right: "-104px"
                            },
                            ease: Circ.easeOut
                        })
                    }
                    return
                }
                setMenuData(menuData);
                var e = $("#module-container").attr("style");
                if (e == undefined) {
                    e = ""
                }
                $("#module-container").attr("id", "module-container-old").attr("style", e);
                $("#load-container").css("visibility", "hidden").attr("id", "module-container").attr("style", e);
                $("#module-container-old").after($("#module-container"));
                $("#template-wrapper").after('<div id="load-container"></div>');
                showModule();
                clearCustomInterval(showModuleInterval)
            }, 50)
        }
        break
    }
}
function templateCollectGarbage() {
    var a = $("#template-menu").attr("data-current-module-type");
    if (a != "slideshow") {
        currentSlide = null;
        if (thumbsList != null) {
            thumbsList.destroy();
            thumbsList = null
        }
    }
    a = null
}
function moduleUpdate_slideshow() {
    var c = $(window).width();
    if ($("#slideshow-thumbs-content").length > 0) {
        var b = $("#slideshow-thumbs");
        if (c >= 768 && c <= 1024) {
            $("#slideshow-thumbs-content").css("width", initialThumbContW + "px")
        } else {
            var e = $("#slideshow-thumbs-content");
            var d = $(".slideshow-thumb-holder").width() + parseInt($(".slideshow-thumb-holder").css("margin-right"), 10);
            if (b.width() > c) {
                $("#slideshow-thumbs-content").css("width", (e.width() - d) + "px")
            } else {
                if (b.width() + d <= c) {
                    if (e.width() + d <= initialThumbContW) {
                        e.css("width", (e.width() + d) + "px")
                    }
                }
            }
        }
        b.css("margin-left", ($("#module-container").width() - b.width()) * 0.5);
        if (thumbsList != null) {
            thumbsList.updateCustomList()
        }
    }
    var a = $("#slideshow .slideshow-slide");
    if (a.length > 0) {
        $("#slideshow-captions", a).each(function () {
            $(this).css("top", ($(window).height() * 0.3) + "px");
            $(this).css("left", ($("#module-container").width() * 0.5) + "px")
        })
    }
}
function moduleUpdate_home2() {
    var d = $(window).width();
    var a = ".home-layout2-content ul li";
    var b = "#module-home-layout2";
    var c = $(txt_modCont);
    var e = $(b, c);
    if (e.length <= 0) {
        return
    }
    if (d > 1200) {
        $(b).css("width", "");
        $(a).attr("style", "");
        $(a + ":nth-child(4n+4)").css("margin-right", "0px")
    } else {
        if (d > 1024 && d <= 1200) {
            $(b).css("width", "800");
            $(a).attr("style", "").attr("style", " margin-right: 20px; width: 162px;");
            $(a + ":nth-child(4n+4)").css("margin-right", "0px")
        } else {
            if (d >= 768 && d <= 1024) {
                $(b).css("width", "570");
                $(a).attr("style", "");
                $(a + ":nth-child(2n+2)").css("margin-right", "0px")
            } else {
                if (d < 768 && d >= 480) {
                    $(b).css("width", "510");
                    $(a).attr("style", "");
                    $(a + ":nth-child(2n+2)").css("margin-right", "0px")
                } else {
                    if (d < 480) {
                        $(b).css("width", "350");
                        $(a).attr("style", "");
                        $(a).css("margin-right", "0px")
                    }
                }
            }
        }
    }
    moduleUpdate(c, e, $("div:first", e), sideType)
}
function moduleUpdate_home3() {
    var a = $(txt_modCont);
    var b = $("#module-home-layout3", a);
    if (b.length <= 0) {
        return
    }
    moduleUpdate(a, b, $("div:first", b), sideType)
}
function moduleUpdate_text_page() {
    var a = $(txt_modCont);
    var b = $("#module-wrapper", a);
    if (b.length <= 0) {
        return
    }
    moduleUpdate(a, b, $("div:first", b), sideType)
}
function moduleUpdate_showreel() {
    var a = $(txt_modCont);
    var b = $("#module-showreel", a);
    if (b.length <= 0) {
        return
    }
    moduleUpdate(a, b, $("div:first", b), sideType)
}
function moduleUpdate_fullscreen_video(c) {
    var d = $(txt_modCont);
    var f = $("#module-fullscreen-video", d);
    if (f.length <= 0) {
        return
    }
    var e = $(window).width() - get_OffsetWidth();
    var a = $(window).height();
    var b = $("#standalone-wrapper", f);
    if (b.length > 0) {
        TweenMax.to([b, f], 0.6, {
            css: {
                width: e,
                height: a
            },
            easing: Sine.easeOut
        })
    } else {
        TweenMax.to(f, 0.6, {
            css: {
                width: e,
                height: a
            },
            easing: Sine.easeOut
        })
    }
}
function moduleUpdate_pricing_tables() {
    var a = $(txt_modCont);
    var b = $("#module-pricing", a);
    if (b.length <= 0) {
        return
    }
    moduleUpdate(a, b, $("div:first", b), sideType)
}
function moduleUpdate_full_width(a) {
    var c = $(txt_modCont);
    var h = $("#module-full-width", c);
    var d = $("#module-wrapper", h);
    if (h.length <= 0) {
        return
    }
    var e = $(window).width() - get_OffsetWidth();
    if (touchDevice == 1) {
        var f = (menuActive == false) ? 0 : templateMenuW;
        e = $(window).width() - f
    }
    var g = (moduleList != null) ? moduleList.currentPosition() : 0;
    var b = h.width();
    h.css("width", e);
    if ($("#module-full-width-holder-text", d).height() > $(window).height()) {
        e = e - $(t_scrBarV2).width()
    }
    if (a == undefined || a == false) {
        h.css("width", e);
        moduleUpdate(c, d, $("div:first", d), sideType, sideType)
    } else {
        if (b == e) {
            h.css("width", e);
            if (touchDevice == 1) {
                moduleUpdate(c, d, $("div:first", d), sideType)
            }
        } else {
            TweenMax.to(h, 0.3, {
                css: {
                    width: e
                },
                easeing: Sine.easeOut,
                onComplete: function () {
                    moduleUpdate(c, d, $("div:first", d), sideType)
                }
            })
        }
    }
}
function moduleUpdate_news() {
    var c = $(txt_modCont);
    var e = $("#module-news-vertical", c);
    var a = $(newsPrvU, e);
    var d = "#module-news-vertical-holder";
    if (previewNewsOpen == true) {
        var b = 0;
        for (b; b < totalPreviews; b++) {
            if (b != previewNewsIndex) {
                newsPrevItemArr[b].css("display", "none")
            }
        }
        moduleUpdate(c, $("#module-news-preview-holder", e), $("#module-news-preview-container", e), "custom", 0);
        if (touchDevice == 1) {
            $("#module-news-preview-container", e).css("height", "");
            $("#module-news-preview-container", e).css("height", $("#module-news-preview-container", e).height())
        }
        newsPreviewItemDisplay("inline")
    } else {
        moduleUpdate(c, $(d, e), $(d + " div:first", e), sideType)
    }
}
function moduleUpdate_contact() {
    var c = $(txt_modCont);
    var g = $("#module-wrapper", c);
    var f = $("#map-holder", c);
    if (g.length <= 0 || $("#module-contact-holder").length <= 0) {
        return
    }
    var a = $("#module-container").width();
    $("#module-contact-holder").css("left", (a - $("#module-contact-holder").width()) * 0.5 + "px");
    var b = screen.width;
    var e = (-get_OffsetWidth()) * 0.5;
    if (f.length > 0) {
        TweenMax.to(f, 0.3, {
            css: {
                left: e
            },
            easing: Sine.easeOut
        })
    }
    var d = $(window).width() - get_OffsetWidth() - $(t_scrBarV2).width();
    if (touchDevice == 1) {
        d = $(window).width() - templateMenuW
    }
    g.css("width", d);
    if ($("div:first", g).height() <= $(window).height()) {
        d = d + $(t_scrBarV2).width()
    }
    g.css("width", d);
    moduleUpdate(c, g, $("div:first", g), sideType)
}
function moduleUpdate_gallery() {
    var i = $(txt_modCont);
    var k = $("#module-galleries", i);
    var g = $("#module-galleries-holder", k);
    if (k.length <= 0) {
        return
    }
    var f = parseInt($(".thumb-holder").css("margin-right"), 10);
    var a = parseInt($(".thumb-holder").css("margin-bottom"), 10);
    var l = $(".thumb-holder").width();
    var h = $(".thumb-holder").height();
    var j = g.width();
    var m = g.height();
    var c = k.height();
    var b = Math.round(j / (l + f));
    var e = Math.floor(c / (h + a) + 1);
    var d = b * e - 1;
    visibleGalleryH = c;
    galleryColumns = b;
    galleryLines = e;
    $(".thumb-holder", g).css("margin-right", "");
    $(".thumb-holder:nth-child(" + galleryColumns + "n+" + galleryColumns + ")", g).css("margin-right", "0px");
    moduleUpdate(i, k, $("div:first", k), sideType);
    if (previewGalleryOpen == true) {
        updatePreviewMediaPosition()
    }
}
function moduleUpdate_full_width_gallery() {
    var b = $(txt_modCont);
    var c = $("#module-full-width-gallery", b);
    var a = b.attr("data-id");
    if (c.length > 0) {
        if (initialThumbW <= 0) {
            return
        }
        checkItems();
        moduleUpdate(b, c, $("div:first", c), sideType)
    }
    if (previewFullWidthOpen == true) {
        updateFullWidthPreviewPosition()
    }
}
function moduleUpdate_page_columns(e) {
    var d = $(txt_modCont);
    var h = $("#module-columns", d);
    var c = d.attr("data-id");
    var f = $("#module-columns-wrapper", h);
    var a = $("#module-columns-preview-wrapper", h);
    if (h.length <= 0) {
        return
    }
    checkColumnSize(columnsPreviewOpen);
    var b = 0;
    $("#filter-buttons-holder", h).find(".filter-button").each(function () {
        if ($(this).attr("data-filter") != "*") {
            $(this).removeClass("selected");
            TweenMax.to($(this), 0.3, {
                css: {
                    color: "#3f3f3f",
                    backgroundColor: "transparent"
                },
                ease: Sine.easeOut
            })
        } else {
            if ($(this).hasClass("selected") == true) {
                return
            }
            $(this).addClass("selected");
            TweenMax.to($(this), 0.3, {
                css: {
                    color: "#ffffff",
                    backgroundColor: themeColor
                },
                ease: Sine.easeOut
            })
        }
        b++
    });
    var g = Math.abs($("#module-container").width() - d.width()) * 0.5;
    TweenMax.to(d, 0.2, {
        css: {
            left: g
        },
        ease: Circ.easeOut
    });
    if (columnsPreviewOpen == false) {
        if (e == undefined) {
            e = 0
        }
        moduleUpdate(d, f, $("div:first", f), sideType, null, null, e)
    } else {
        if (previewAnimDone == false) {
            return
        }
        var b = 0;
        for (b; b < totalColPreviews; b++) {
            if (b != columnsPreviewIndex) {
                columnsPrevItemArr[b].css("display", "none")
            }
        }
        moduleUpdate(d, a, $("div:first", a), sideType, null, null, 0);
        if (touchDevice == 1) {
            $("div:first", a).css("height", "");
            $("div:first", a).css("height", $("div:first", a).height())
        }
        colPreviewItemDisplay("inline")
    }
}
$(window).resize(function () {
    templateResize()
});

function templateResize() {
    if (currentSlide != null) {
        resizeImage(currentSlide)
    }
    if ($showModuleBackground != null) {
        resizeImage($showModuleBackground)
    }
    updateTemplateScrollbar();
    switch (currModuleType) {
    case "slideshow":
        moduleUpdate_slideshow();
        break;
    case "home2":
        moduleUpdate_home2();
        break;
    case "home3":
        moduleUpdate_home3();
        break;
    case "text_page":
        moduleUpdate_text_page();
        break;
    case "showreel":
        moduleUpdate_showreel();
        break;
    case "fullscreen_video":
        moduleUpdate_fullscreen_video();
        break;
    case "pricing_tables":
        moduleUpdate_pricing_tables();
        break;
    case "full_width":
        moduleUpdate_full_width();
        break;
    case "news":
        moduleUpdate_news();
        break;
    case "contact":
        moduleUpdate_contact();
        break;
    case "gallery":
        moduleUpdate_gallery();
        break;
    case "full_width_gallery":
        moduleUpdate_full_width_gallery();
        break;
    case "page_columns":
        moduleUpdate_page_columns();
        break
    }
    moduleType = null;
    if (firstRun == true) {
        return
    }
    if ($(window).width() >= 768) {
        $("footer").css("display", "inline").css("visibility", "visible")
    } else {
        $("footer").css("display", "none").css("visibility", "hidden")
    }
}
function updateTemplateScrollbar() {
    var f = $("#module-container #module-scrollbar-holder");
    var c = $("#module-container #module-scrollbar-holder_v2");
    var a = (f.length > 0) ? f : c;
    var l = $(window).width();
    var h = $(window).height();
    var d = parseInt($("#menu-container #menu-hider").height(), 10);
    var i = getMenuWidth();
    var b = getMenuHeight();
    $("#module-container").css("width", (l - get_OffsetWidth()) + "px");
    if (l >= 768) {
        $("#module-container").css("top", "0px").css("left", i + "px");
        $("#module-container").css("height", "100%");
        if (firstRun == false) {
            $("footer").css("display", "inline").css("visibility", "visible")
        }
        if (a.length > 0) {
            a.css("height", h).css("top", "0px")
        }
        if (menuActive == false) {
            var k = ($("#menu-hider").length > 0) ? parseInt($("#menu-hider").width(), 10) : 0;
            var j = parseInt($("#menu-container").css("width"), 10) - k;
            var g = 0;
            $("#template-wrapper").css("left", -(j) + "px").css("top", "0px");
            $("#menu-container").css("left", g + "px").css("top", "0px")
        }
    } else {
        if (menuActive == true) {
            var g = 0;
            $("#template-wrapper").css("left", "0px").css("top", "0px");
            $("#menu-container").css("left", "0px").css("top", "0px")
        } else {
            var e = parseInt($("#menu-container").height(), 10) - d;
            $("#template-wrapper").css("left", "0px").css("top", -e + "px");
            $("#menu-container").css("left", "0px").css("top", "0px")
        }
        $("#module-container").css("left", "0px").css("top", $("#menu-container").height() + "px");
        $("#module-container").css("height", (h - d) + "px");
        if (firstRun == false) {
            $("footer").css("display", "none").css("visibility", "hidden")
        }
        if (a.length > 0) {
            a.css("height", (h - d) + "px")
        }
    }
}
function get_OffsetWidth() {
    var a = 0;
    if ($(window).width() > 767) {
        if (menuActive == false) {
            if (isOverMenu == false) {
                a = parseInt($("#menu-hider").css("width"), 10)
            } else {
                a = parseInt($("#menu-container").css("width"), 10)
            }
        } else {
            a = parseInt($("#menu-container").css("width"), 10)
        }
    }
    return a
}
function templateAddMediaVideo(h, d, a) {
    var c = d.attr("id");
    var b = (h != "standalone") ? b = d.attr("data-url") : "";
    var j = (a == undefined) ? d : a;
    var f = "";
    if (h == "standalone") {
        f += '<video id="standalone-wrapper" class="video-js vjs-default-skin" controls preload="none" width="' + d.attr("data-width") + '" height="' + d.attr("data-height") + '"poster="' + d.attr("data-poster") + '">';
        for (var e = 1; e <= 3; e++) {
            f += '<source src="' + $(d).attr("data-url" + e) + '" type="' + $(d).attr("data-type" + e) + '" />'
        }
        f += "</video>"
    } else {
        if (h != "standalone") {
            f += '<iframe src="' + b + '" width="' + d.attr("data-width") + '" height="' + d.attr("data-height") + '" frameborder="0" allowfullscreen="" mozallowfullscreen="" webkitallowfullscreen=""></iframe>';
            if ($.browser.msie && h == "youtube") {
                if ($.browser.version == "8.0" || ($.browser.version == "9.0" && isIE9Std() == false)) {
                    b = b.replace("http://www.youtube.com/embed/", "http://www.youtube.com/v/");
                    f = '<object width="' + d.attr("data-width") + '" height="' + d.attr("data-height") + '"><param name="movie" value="' + b + '?fs=1&enablejsapi=1"></param><param name="allowFullScreen" value="true"></param><param name="allowScriptAccess" value="always"></param><embed id="ytplayer" src="' + b + '?fs=1&enablejsapi=1"type="application/x-shockwave-flash"allowfullscreen="true"allowscriptaccess="always"width="' + d.attr("data-width") + '" height="' + d.attr("data-height") + '"></embed></object>'
                }
            }
        }
    }
    j.append(f);
    destroyVideoJS();
    j.css("opacity", "0").css("visibility", "visible");
    if (h == "standalone") {
        var g = false;
        videojsHolder = _V_("standalone-wrapper", {}, function () {
            if (g == false) {
                g = true;
                TweenMax.to([$("#standalone-wrapper"), j], 0.6, {
                    css: {
                        opacity: "1"
                    },
                    ease: Circ.easeOut
                })
            }
        })
    } else {
        TweenMax.to(j, 0.6, {
            css: {
                opacity: "1"
            },
            ease: Circ.easeOut
        })
    }
}
function destroyVideoJS() {
    if (videojsHolder != "") {
        videojsHolder.pause();
        if (videojsHolder.techName == "html5") {
            videojsHolder.tag.src = "";
            videojsHolder.tech.removeTriggers();
            videojsHolder.load()
        }
        videojsHolder.tech.destroy();
        videojsHolder.destroy();
        $(videojsHolder.el).remove();
        videojsHolder.players = {}
    }
}
function clearCustomInterval(a) {
    if (a != "") {
        clearInterval(a);
        a = ""
    }
}
function resizeImage(e, c) {
    e.removeAttr("width");
    e.removeAttr("height");
    var h = $(window).width() - get_OffsetWidth(),
        b = $(window).height(),
        f = e.width(),
        m = e.height(),
        d = b / h,
        k = m / f,
        g, a, l, j, i;
    if (d > k) {
        g = b / k;
        a = b
    } else {
        g = h;
        a = h * k
    }
    if (c == undefined || c == false) {
        e.css("width", g).css("height", a)
    } else {
        if (c == true) {
            TweenMax.to(e, 0.6, {
                css: {
                    width: g,
                    height: a
                },
                ease: Sine.easeOut
            })
        }
    }
}
function rgb2hex(a) {
    var b = "";
    if (a != undefined) {
        if (($.browser.msie && ($.browser.version == "9.0" && isIE9Std() == true)) || !$.browser.msie) {
            a = a.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
            b = "#" + ("0" + parseInt(a[1], 10).toString(16)).slice(-2) + ("0" + parseInt(a[2], 10).toString(16)).slice(-2) + ("0" + parseInt(a[3], 10).toString(16)).slice(-2)
        } else {
            b = a
        }
    }
    return b
}
function mobileConsole(d, b, a, c) {
    if (a != undefined && a == true) {
        $("#console-log").empty()
    }
    $("#console-log").append("<span>" + d + " " + b + "</span>");
    if (c == true) {
        $("#console-log").css("display", "inline")
    }
};